// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../vendor/create-dmg/LICENSE (1.12kB)
// ../../../vendor/create-dmg/Makefile (886B)
// ../../../vendor/create-dmg/README.md (3.898kB)
// ../../../vendor/create-dmg/builder/create-dmg.builder (516B)
// ../../../vendor/create-dmg/create-dmg (12.345kB)
// ../../../vendor/create-dmg/doc-project/Developer Notes.md (1.412kB)
// ../../../vendor/create-dmg/doc-project/Release Checklist.md (325B)
// ../../../vendor/create-dmg/support/LICENSE-licenseDMG-pyhacker (1.059kB)
// ../../../vendor/create-dmg/support/README (219B)
// ../../../vendor/create-dmg/support/licenseDMG.py (7.133kB)
// ../../../vendor/create-dmg/support/template.applescript (1.828kB)

package bindata

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _license = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x52\x4d\x6f\xe3\x36\x14\xbc\xf3\x57\x0c\x72\x4a\x00\x35\x4d\x83\x1e\x8a\xde\x18\x8b\xb6\xd8\x4a\xa4\x41\xd1\xeb\xfa\x48\x4b\x74\xc4\x56\x26\x0d\x91\x5e\xc3\xff\xbe\xa0\xec\xec\x36\xdd\x93\x61\xbe\xf9\x78\x33\x4f\x7a\xb0\x68\xb8\x46\xed\x3a\xeb\xa3\xc5\x63\xc3\xf5\x13\x21\x8b\x70\xba\x4e\xee\x7d\x48\x78\xec\x9e\xf0\xfa\xf2\xf2\xdb\x4f\xaf\x2f\xbf\xfc\x0a\xea\xfb\xc9\x5e\xa1\xcd\x64\x7c\x8a\xe1\xeb\x0f\xc0\xd7\x97\x1b\xe6\x82\x3f\x8c\xff\xc7\x12\xb2\xb6\xd3\xd1\xc5\xe8\x82\x87\x8b\x18\xec\x64\xf7\x57\xbc\x67\xba\xed\x0b\x1c\x26\x6b\x11\x0e\xe8\x06\x33\xbd\xdb\x02\x29\xc0\xf8\x2b\x4e\x76\x8a\xc1\x23\xec\x93\x71\xde\xf9\x77\x18\x74\xe1\x74\x25\xe1\x80\x34\xb8\x88\x18\x0e\xe9\x62\x26\x0b\xe3\x7b\x98\x18\x43\xe7\x4c\xb2\x3d\xfa\xd0\x9d\x8f\xd6\x27\x93\xb2\xdf\xc1\x8d\x36\xe2\x31\x0d\x16\x0f\xed\x9d\xf1\xf0\x34\x9b\xf4\xd6\x8c\xc4\x79\xe4\xd9\xc7\x08\x17\x97\x86\x70\x4e\x98\x6c\x4c\x93\xeb\xb2\x46\x01\xe7\xbb\xf1\xdc\xe7\x1d\x3e\xc6\xa3\x3b\xba\xbb\x43\xa6\xcf\xe9\x23\x49\x01\xe7\x68\x8b\x79\xcf\x02\xc7\xd0\xbb\x43\xfe\xb5\x73\xac\xd3\x79\x3f\xba\x38\x14\xe8\x5d\x96\xde\x9f\x93\x2d\x10\xf3\xe3\xdc\x7a\x91\x73\xfc\x1c\x26\x44\x3b\x8e\xa4\x0b\x27\x67\x23\xe6\xac\xdf\xb7\x9b\x31\x79\xf5\x53\x2e\x34\xdd\x2b\x8a\xf9\xe5\x32\x84\xe3\xe7\x24\x2e\x92\xc3\x79\xf2\x2e\x0e\x76\xe6\xf4\x01\x31\xcc\x8e\x7f\xdb\x2e\xe5\x97\x0c\x3f\x84\x71\x0c\x97\x1c\xad\x0b\xbe\x77\x39\x51\xfc\x9d\x90\xfc\x49\x98\x7d\xf8\x6a\xe7\x2c\xb7\xe3\xfa\x90\x5c\x77\xab\x7b\x3e\xc0\xe9\xfb\x55\xef\xa3\x38\x98\x71\xc4\xde\xde\x0b\xb3\x3d\x9c\x87\xf9\x4f\x9c\x29\xdb\xc7\x64\x7c\x72\x66\xc4\x29\x4c\xb3\xdf\xff\x63\x3e\x13\xa2\x2b\x86\x56\x2e\xf5\x96\x2a\x06\xde\x62\xad\xe4\x17\x5e\xb2\x12\x0f\xb4\x05\x6f\x1f\x0a\x6c\xb9\xae\xe4\x46\x63\x4b\x95\xa2\x42\xef\x20\x97\xa0\x62\x87\x3f\xb9\x28\x0b\xb0\xbf\xd6\x8a\xb5\x2d\xa4\x22\xbc\x59\xd7\x9c\x95\x05\xb8\x58\xd4\x9b\x92\x8b\x15\xde\x36\x1a\x42\x6a\xd4\xbc\xe1\x9a\x95\xd0\x12\xd9\xf0\x2e\xc5\x59\x9b\xc5\x1a\xa6\x16\x15\x15\x9a\xbe\xf1\x9a\xeb\x5d\x41\x96\x5c\x8b\xac\xb9\x94\x0a\x14\x6b\xaa\x34\x5f\x6c\x6a\xaa\xb0\xde\xa8\xb5\x6c\x19\xa8\x28\x21\xa4\xe0\x62\xa9\xb8\x58\xb1\x86\x09\xfd\x0c\x2e\x20\x24\xd8\x17\x26\x34\xda\x8a\xd6\x75\xb6\x22\x74\xa3\x2b\xa9\xf2\x7e\x58\xc8\xf5\x4e\xf1\x55\xa5\x51\xc9\xba\x64\xaa\xc5\x1b\x43\xcd\xe9\x5b\xcd\x6e\x56\x62\x87\x45\x4d\x79\x53\xa0\xa4\x0d\x5d\xb1\x99\x25\x75\xc5\x14\xc9\xb0\xdb\x76\xd8\x56\x2c\x3f\x65\x3f\x2a\x40\x17\x9a\x4b\x91\x63\x2c\xa4\xd0\x8a\x2e\x74\x01\x2d\x95\xfe\x46\xdd\xf2\x96\x15\xa0\x8a\xb7\xb9\x90\xa5\x92\x4d\x41\x72\x9d\x72\x99\x21\x5c\x64\x9e\x60\x37\x95\x5c\x35\x3e\x5d\x44\xaa\xf9\xff\xa6\x65\xdf\x04\x51\x32\x5a\x73\xb1\x6a\x33\x39\x47\xfc\x00\x3f\x93\x7f\x03\x00\x00\xff\xff\xcc\xc1\xd1\x26\x60\x04\x00\x00")

func licenseBytes() ([]byte, error) {
	return bindataRead(
		_license,
		"LICENSE",
	)
}

func license() (*asset, error) {
	bytes, err := licenseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "LICENSE", size: 1120, mode: os.FileMode(0644), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4b, 0xdb, 0x61, 0xf5, 0xfa, 0xc6, 0x9f, 0xd5, 0xcc, 0x3, 0x8, 0x53, 0x5f, 0xec, 0xbc, 0x4f, 0x22, 0xbb, 0x75, 0xa3, 0xe6, 0x15, 0xad, 0xbd, 0x5d, 0x73, 0x92, 0x37, 0x2f, 0xa, 0xc, 0xc3}}
	return a, nil
}

var _makefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x51\x4b\xab\xe2\x30\x14\x5e\x7b\x7e\xc5\x01\xbb\x68\x17\x35\x1b\x99\x85\xe0\x22\x68\x51\x19\x5f\xd4\x6e\x66\x25\x31\x4d\xc7\x32\x6d\x53\x92\xc8\x28\xd2\xff\x7e\xe9\xcb\x5b\x8a\xdc\xdb\xbb\x0b\xdf\xe3\x7c\x5f\xce\x19\xe3\x8e\xfd\x13\x51\x9c\x08\x8c\xa4\xc2\x85\xfc\xaf\xd9\x03\xe0\x48\x17\xbf\xe9\xca\x3b\x07\xd4\xdf\xd3\x9d\x87\x73\xe4\x4a\x30\x23\xdc\x30\xfd\x0b\x90\x2b\x11\xc5\x77\x9c\x23\xb9\x69\x45\x12\xc9\x59\x02\xe2\x2e\xf8\xf9\x45\x58\xcf\xfa\x59\xc0\x25\xce\xc2\x58\x55\x50\x47\x52\x90\x4b\x9c\x41\xc8\x0c\x53\x52\x9a\x56\xd0\x72\xfa\xca\x94\xa8\xd8\x96\xe9\x28\x0b\x08\x25\x7f\x87\x93\x50\x72\x62\x3d\x7b\xd5\x0b\xd0\x0f\xcd\x65\x16\xf5\x43\x84\xe1\x90\xb2\xb2\xdc\xbc\x37\x27\x65\x19\x68\xd5\x64\x4c\x00\x4e\x6b\x6f\xbb\x2d\x7f\x7b\x89\x33\xa2\xaf\xb0\xd9\x9f\x02\x5a\x21\x71\xa6\x0d\x4b\x92\x16\x39\x1f\xfd\xc3\xca\xa7\xbb\x32\xc7\x6e\x30\xe7\x45\x2e\x69\x40\xab\x06\x0d\x50\xa0\x9b\xe2\xaf\xe9\x14\x60\x72\x5c\x1f\xf6\x7f\x66\xed\x38\xbc\x65\xed\x60\x68\x1e\xb3\xee\xfe\x47\x9f\xc3\xd1\x0d\xd1\xb2\x97\xde\x29\x58\x6e\x7c\xc7\xb2\xeb\xcf\x39\x5f\x49\xea\x83\x74\x25\x6d\x6d\xa7\x13\xf2\xce\x42\x86\x75\x68\xee\xe6\x10\xcb\xee\xdd\xc2\x81\x11\xcf\xd1\xf5\x51\xdf\xf2\x5c\x2a\xf3\x53\x9b\xb8\xb3\x34\x4f\x84\x1e\xee\x1b\xd7\x46\x23\xb4\x19\xee\x82\xd7\xfe\x67\x30\x52\x29\xba\xd1\xb7\xdb\x28\x55\x2a\x1a\x9c\xf0\x11\x00\x00\xff\xff\x6e\x51\x30\x8e\x76\x03\x00\x00")

func makefileBytes() ([]byte, error) {
	return bindataRead(
		_makefile,
		"Makefile",
	)
}

func makefile() (*asset, error) {
	bytes, err := makefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Makefile", size: 886, mode: os.FileMode(0644), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb7, 0x8f, 0xc3, 0x79, 0x98, 0xa0, 0xa3, 0x25, 0xa, 0xde, 0x83, 0xa0, 0x51, 0xca, 0x2a, 0x53, 0x76, 0x5c, 0x80, 0xc2, 0x18, 0x53, 0x1d, 0xb6, 0x84, 0xd4, 0x17, 0x2b, 0xb4, 0xc3, 0x10, 0xcf}}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\xfd\x6e\xdb\xc8\x11\xff\x9f\x4f\x31\x75\x81\x9c\x6d\x98\x94\x6c\xb4\x81\x2f\x50\x83\x4b\x7b\xed\xf5\x8a\x04\x41\x9b\x0b\x8a\x56\x0a\xec\x25\x77\x44\x4e\xb4\xdc\xd9\xec\x2e\x2d\xd1\xc8\xc3\x17\xb3\x24\x2d\x29\xb6\xaf\xad\x01\x43\x14\x67\xe6\x37\xdf\x1f\xaa\x3c\xaa\x88\xb9\x6e\xeb\xec\x0f\x0f\x7f\x59\xf6\x06\x42\x83\xc6\x40\xa8\x3c\xb9\x08\x91\xa1\xec\xc8\x68\x58\x2b\x5b\xf5\xf0\xe3\xbb\x9f\x42\x91\x65\x1f\xa2\x8a\x5d\x00\x65\x35\x54\x6c\xa3\xa7\xb2\x8b\xc4\x16\x1c\x1b\xaa\xfa\x2c\xff\xd5\xbf\x2c\xfb\xd3\x83\x6a\xa0\x00\xad\x22\x1b\x15\x59\xd4\x10\x1b\x65\x37\x41\x94\xc6\x06\xf7\xd0\xec\x03\x6c\x1b\x86\x80\x56\x83\xeb\x8c\x01\x8f\x5f\x3a\x0c\x31\x14\xd9\x9b\x00\xbc\x86\x77\xaa\x87\xab\xf9\xd5\xfc\x02\x96\x6f\xac\xf6\xb8\x85\xbf\x29\xbb\xc1\x4f\xa7\x4d\x8c\x2e\xbc\x9a\xcd\x6a\x8a\x4d\x57\x16\x15\xb7\x33\xe5\x3e\x0b\xed\x4c\x74\x8b\x1a\xe7\xa9\x55\xbe\xdf\xdb\xe1\x2f\x92\x67\xa7\x81\x6c\x85\xf0\x01\x5d\xc4\xb6\x44\x0f\x57\xf3\xcb\xeb\x33\x58\xfe\xa0\xd8\xe2\xfd\xd3\xd0\x42\x39\x83\x46\x05\x68\xd0\x38\xd4\xb0\xa5\xd8\x24\x2d\x09\x1d\xad\xb2\x15\x16\xd9\x2f\x49\x2d\x7f\xc6\x2a\x42\xc3\x2d\x82\x53\x35\x8a\x3d\x8b\x27\x40\xf7\x89\x3a\x78\x7c\x5d\x64\xd9\x3f\x11\xb6\x64\x0c\xb4\xe8\x6b\x04\x65\xfb\xa3\xd8\x48\x30\x23\x28\xad\x03\x04\x6e\x31\x36\x64\x6b\xe8\x02\xae\x3b\x93\xdc\xd3\x8c\x01\x2c\x47\x28\x3d\xaa\x0d\xe0\x8e\x42\x14\x96\xc4\x28\x49\xfe\x79\x0d\x3d\x77\xdf\x79\x81\x06\x55\x45\xba\x43\x91\xf7\x49\x7a\xab\xec\x50\x1c\x08\xea\x28\x72\xec\xe1\x73\x17\xe2\x03\x43\xd5\xa8\x78\x01\xce\xa0\x0a\x08\x6e\xb0\x01\xd8\xc2\x4f\x14\xa3\x60\x45\x58\xd6\xe9\xb1\xa0\x23\x57\xdf\x72\x59\xf6\x47\x41\x7e\x86\xe7\x2c\xe9\x5c\x62\xab\xc8\xc0\x98\x7c\x4d\x1e\xab\x68\xfa\x4f\xa7\x6b\xc3\x21\xfc\x30\xa6\xbc\xb0\x18\xcf\x8a\xa3\xfa\xdb\xaa\x00\xec\xa9\x26\xab\x8c\xe9\x61\x00\xd7\x50\xf6\x63\x21\xf5\xf0\x8b\xf2\xca\xc6\xc0\x77\x4f\x67\x3c\x31\xdd\x51\xc2\xfd\xd9\x86\xa8\x8c\x51\xd2\x0b\xd9\x71\xc9\xe7\xf0\x2f\xee\xa0\x52\x16\x68\x60\x92\x38\x87\xa9\xcb\xba\x20\x81\x59\xfe\x95\x5b\x2c\x3d\x6e\xf7\x9a\xe4\x5b\x11\x9a\xb3\x57\x59\x06\x70\x7b\x7b\x1b\x9a\x0c\x24\x61\xdb\x07\x98\x83\x36\x4e\x1c\x87\xaa\x34\x6f\xad\x61\xa5\x53\x01\x2e\x8d\x8a\x52\x16\x1e\x53\x2e\x9e\xf4\xe6\xc9\x52\x9b\x8d\x12\x61\x36\x20\x9c\xa5\x02\x98\xf4\x53\x84\xb5\xe7\x56\x54\x78\x3c\x32\xb3\x55\x1b\x9c\xd8\x1e\xdb\xa6\x4c\x60\xa8\x0c\x5b\x4c\xd6\xa1\x8d\xe4\x11\x3c\x3a\x0e\x14\xd9\xf7\x49\x89\xef\xac\x28\x30\x5c\xa5\xec\x3c\xa3\xa8\xa6\x38\x22\xfd\xaf\x2e\x15\x35\xc5\xc9\xa4\x8f\x41\xd5\x98\x8d\x69\x1a\x20\xf7\x8c\xb0\x64\x27\xd9\x0c\x50\x14\xc5\x27\x58\x70\x17\x5d\x17\x6f\xac\x6a\xb1\x90\x2e\x84\x45\xe0\xce\x57\x78\xb3\x66\xa3\xd1\xbf\xce\x12\xe4\x1b\xc9\x0b\x4b\xbb\xc7\x34\x9d\x06\x9e\xd5\xc8\x34\x34\x6d\x29\xf3\xcd\x11\x4a\x24\xc7\x79\xa7\x29\x6c\x80\x5a\x55\x63\x91\x65\xe7\xe7\xef\x07\xcd\xaf\xce\xcf\x25\x6e\xe7\xe7\x79\x7e\xc7\x46\x34\xc3\x6a\x21\x1f\xab\xd7\xaf\xce\xcf\x21\x60\x84\x3b\x36\x5d\x8b\x90\x68\xa7\x9a\x82\x33\xaa\x4f\xc0\x09\xf6\x2f\x64\x45\x6b\x20\x8d\xa5\x1a\xbb\x97\xac\xe6\x2d\x44\x8a\x06\xcf\xf6\xe0\x54\xb1\x85\xd5\x42\x3e\x0a\xaa\x6c\x78\xa4\x41\x28\x23\x7b\xa9\xaa\x4d\xed\xb9\xb3\x1a\x56\x0b\x47\x55\xe1\x6c\xbd\xe7\x1f\x3d\x3d\x60\x4a\x7e\xc1\xa9\xf3\x7c\x47\x1a\xc1\xd9\xfa\x02\x6a\x5a\x5f\xc0\x67\x57\x4f\x26\x0c\x66\xe5\x8e\x03\xac\x16\xbb\xd5\x6b\x58\x2d\xfa\x3d\x66\xaa\x0c\xd9\x32\xe2\xd4\x43\x28\x45\xe2\x58\x3c\xd0\xbd\x84\x68\x4b\x3a\x36\x09\xa3\x41\xaa\x9b\xb8\x07\x4a\x0c\xbc\x7e\x16\x27\xe2\x2e\x4e\x28\xf2\x7c\x23\xcf\x7b\xf1\x29\x78\xb8\x1b\xa1\x4e\x2f\xe7\xf9\xe5\xcb\xc9\x09\x89\xd1\x24\x2d\xcf\x4f\x4b\x0b\x25\x8c\xe2\x9d\x93\x41\x79\x79\x75\x7d\x08\x01\xab\xc5\x9a\x0c\xde\x0c\x99\xfe\xd5\x78\x4c\xae\x90\xc1\xef\xc2\x61\x8e\x1a\xd2\x98\xe3\x2e\xa2\x0d\xf4\x2d\xa2\xa0\x08\x7d\xe8\xbe\x07\x1e\x5e\x27\x9c\x11\xa0\xea\x42\xe4\xf6\x91\x3d\x5f\x87\xf7\x37\xf2\xfe\x6b\x50\xad\x33\x78\x23\xc4\xff\x62\xa7\x54\x5e\x1e\xb9\x3d\x34\x51\x39\x97\x6b\xcf\x2e\x37\x64\x37\xdf\x4a\xa7\x09\xa2\x40\xe8\x90\xe8\x91\xe1\x8d\x73\x86\xaa\x34\x62\xc3\x85\xac\x0f\x19\x0e\x09\x7e\x77\x01\xfd\x88\xfa\xc5\xfc\x7f\xa0\xb3\xb7\x54\x7a\xe5\xfb\xd9\xdf\x3b\xaa\x36\x6f\x99\x37\xcf\x42\x63\x67\x14\xac\x16\xf2\x31\xfa\x2c\xa0\x2a\x46\x55\x35\xa0\xc0\x50\x85\x36\x0c\xc9\x98\xee\x18\x99\xcd\x83\xb0\xc7\x7b\x58\x2d\x3c\xde\xdf\x38\x25\xc5\x99\x42\xe4\xb0\xa2\x75\x0f\x43\x4c\x41\x08\x22\xf8\x0f\xbc\x87\xc8\x6c\x64\xe5\x6a\x79\x41\xb6\x32\x9d\xc6\x23\x0d\x23\xac\xe5\x5c\x8e\x0b\x6f\x31\xe6\x68\x55\x69\x50\x80\x35\x05\x79\x04\xd5\x45\x6e\x55\xa4\x0a\x5a\xee\x6c\x7c\x51\xb1\x9b\x9c\x59\xb3\x6f\x55\x3c\xb4\x62\x28\x24\xab\xcc\xd8\xb0\x03\x07\x9c\x6a\x5c\xab\xce\x44\xb9\x51\x3e\xfe\xf8\xef\xf7\x53\xa5\x2a\xad\xf3\xe4\xea\x6a\x11\x95\xaf\x31\xee\xeb\x55\x5e\x7f\x1d\xda\xeb\x71\x5d\x28\xad\xe5\x3f\xd5\x85\x32\x43\xb4\xd8\x4f\xdd\x78\x2a\x0b\xa2\xc4\xc1\xf5\xb6\x33\x91\x9c\x44\x93\x5a\x0c\x93\x62\x99\x95\x79\x32\x71\xea\xb5\xdd\xbe\xe2\x8e\x87\xe9\xd0\x65\xad\xb2\x5d\x5a\x22\x91\x61\x07\xef\xfe\x38\xb5\x88\xa6\x2e\x92\xc9\xef\xd0\x97\x1c\x52\xdc\x70\x87\x55\x17\x11\x46\x92\x8c\xd1\x91\x0a\x2d\x6b\xfc\x46\xf0\x4b\x47\x18\x9f\x11\x4b\xb4\x43\xa1\xa0\xac\x2e\x79\x97\x07\xb5\x7e\x52\x55\xba\x16\x47\x26\xa8\xb8\x75\x2a\x52\x49\x86\x62\x3f\x9e\x6c\xc3\xc1\x66\x30\x84\x69\x6a\xa3\x97\xbe\x4d\x9e\x37\x32\x95\xa4\x64\xc6\x97\x60\x3b\xb9\x5b\x07\xce\xe6\x02\xf2\x5c\x8e\xd2\xb1\x34\x64\x47\xa4\x40\xc9\xbb\x2c\xfb\xf3\x2e\xb5\x71\xf6\x70\xb0\x0c\x9b\xf0\xb7\xbf\x99\x95\x64\x67\xa1\xc9\xd2\xed\x90\xaf\x0f\xfb\x2f\x1f\xef\x1d\xf4\xb2\x0b\xe1\xc5\x0b\xf0\xed\xf3\xf4\xc3\xad\xba\xca\x00\xf6\xeb\xec\xe4\x40\x06\x1e\x64\x4e\xf6\x5c\x69\xfe\x9c\xa8\x3d\xd7\xcd\xc3\x8a\x9a\xb8\x0e\x36\xcd\x09\x4d\x10\x37\xfb\xb7\xb2\x9e\x26\xde\x83\x35\x73\x35\x9f\xc3\xe5\xd5\xfc\x98\x90\xea\xe5\x7a\x3e\x87\xdf\xcd\x27\xca\x7e\xa8\x5f\x1e\xbd\x3b\xb2\xbd\x50\xce\x9d\x0c\x90\xdf\x4f\x4c\xdf\x8c\xe0\xc7\xec\x03\xdb\xf1\x18\x7c\x29\x10\xd7\xbf\x4f\xb4\x93\x67\x03\x3a\xc8\x9e\x1c\x1d\x20\xb3\x93\xe1\x02\xf9\x80\xc3\x60\xbf\xc5\x21\xaf\xe1\x76\xea\xad\xf1\x28\x18\xa4\x20\x7a\x4c\x3d\x0e\x2d\x7b\x59\x03\x03\x73\x21\x27\x8c\xcc\x13\x25\x47\x7f\x78\x74\xca\x2e\x2d\x6b\x14\x9b\x75\x5b\x3f\x79\x47\xbe\x25\xdb\x85\x8f\xb3\x03\x36\xe9\xdb\xa5\x6e\xeb\xf4\x63\x72\x2f\xe3\x7a\x47\x85\xeb\x63\xc3\xb6\x60\x5f\xa7\xef\xb3\x89\x4d\x64\xc2\xe8\xc8\xf2\x43\x54\xd5\xe6\xfd\x1d\xfa\xb5\xe1\x2d\xa4\x5f\x38\xc4\x76\x40\x7a\x35\x9b\x05\x21\xf3\x48\x4e\x36\x4c\x2c\x61\xf6\xfd\xcb\xeb\xeb\xab\x59\xc3\xdb\x5c\x73\x4e\xf9\x58\x87\x2a\xb7\x54\x61\x6e\x98\x37\x64\x6b\x29\x4b\x19\x87\x79\xab\xaa\x9c\x43\xbe\xcb\xd3\x4d\x9e\x57\xdc\xb6\xca\x6a\xc9\x0b\xe6\xd2\x5c\xe1\x2c\xfb\x4f\x00\x00\x00\xff\xff\xf1\xf6\x5f\x4f\x3a\x0f\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 3898, mode: os.FileMode(0644), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd8, 0xd3, 0xef, 0x2e, 0xb6, 0xc0, 0x87, 0x96, 0xe8, 0xc4, 0x49, 0x4c, 0xf6, 0x2a, 0xd2, 0x29, 0xfa, 0x24, 0x7f, 0x24, 0x82, 0x8c, 0x70, 0x79, 0xf2, 0x22, 0xd8, 0xea, 0x53, 0x79, 0x22, 0x5a}}
	return a, nil
}

var _builderCreateDmgBuilder = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x6a\xc3\x30\x10\x84\xcf\xbb\xef\x91\xa3\x93\x43\xaf\xa5\xd0\x1f\x17\x0c\xc5\x36\xb6\x92\xd2\x1a\x51\x94\x68\xed\x0a\xa4\x5a\x48\x32\x84\x3c\x7d\xc1\x22\x8d\xdc\x86\x1e\x35\xfb\xcd\xec\x68\xdb\x9c\x81\xb0\xf6\xe3\x4b\x18\x82\x83\x23\x11\x28\x93\x66\x40\xdc\xe5\x4d\x5b\x54\x65\xa2\xad\x0f\x93\x4b\x9e\xf0\x49\x42\xfa\x8d\x11\x3e\x90\x43\x2c\xf3\xd7\xa7\xa2\x81\xfd\xa4\xb4\x5c\x4b\xe5\x20\x90\xb1\xb0\xca\x66\x01\xb2\x19\x78\x2e\x5e\xf2\x34\xf0\xa4\x2c\xf4\x24\xc2\xe4\x48\xc2\x6a\x7e\xae\x10\xf1\xb1\xaa\xdf\x58\x05\xdd\x4f\x16\x47\x28\x4a\x56\xa5\xcb\xbb\x65\x2f\xbe\x49\xba\x47\xd8\x0b\x63\x35\xfd\x05\xa3\x7e\x86\x26\x6b\x47\x17\xae\x50\x71\x80\x80\xed\xf6\xa1\x65\xbb\xfb\xa6\x4d\x0a\xdd\x0a\x1d\xc8\xdd\xa5\x5b\xa1\xeb\x38\x47\xc4\xf7\xa2\x5e\xa4\x9d\x94\x3d\xd7\x8f\xfe\xac\x57\x9a\x7c\x66\x1d\xf5\xea\xc8\x17\xbf\x44\xac\xb7\x0c\x0c\x0d\x62\x3f\x1e\xe3\xe5\xfc\xaf\x7b\x5d\x23\x62\x82\x1e\x87\xe8\xf7\x37\xff\x58\x2f\xc3\x8b\xeb\x3b\x00\x00\xff\xff\xda\x50\x2e\xe6\x04\x02\x00\x00")

func builderCreateDmgBuilderBytes() ([]byte, error) {
	return bindataRead(
		_builderCreateDmgBuilder,
		"builder/create-dmg.builder",
	)
}

func builderCreateDmgBuilder() (*asset, error) {
	bytes, err := builderCreateDmgBuilderBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builder/create-dmg.builder", size: 516, mode: os.FileMode(0644), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x45, 0x19, 0x22, 0x65, 0xf3, 0x99, 0x89, 0x73, 0x97, 0xd7, 0xcb, 0x8f, 0x52, 0xdf, 0x52, 0x7f, 0x54, 0x38, 0x3f, 0xee, 0x5f, 0xfc, 0xda, 0x21, 0x63, 0x94, 0xf9, 0x7, 0xd3, 0x15, 0x6d, 0x60}}
	return a, nil
}

var _createDmg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x7a\xff\x72\xdb\xb6\xb2\xff\xdf\xe2\x53\x6c\x19\x4e\x2d\x9d\x9a\x92\xe5\xb6\x39\xfd\x3a\x56\xe6\x2b\x5b\x8a\xad\x1b\xff\xc8\x91\xec\x26\x6d\x93\xab\x81\xc8\x95\x84\x63\x8a\x60\x01\xd0\xb6\xec\x68\xe6\xbe\xc6\x7d\xbd\xfb\x24\x77\x00\x90\x22\x28\x51\x4e\x3b\x37\x33\xb1\x24\x70\x77\xb1\x58\xec\x2e\x3e\xbb\xe0\xab\xef\x5a\xa9\xe0\xad\x09\x8d\x5b\x18\xdf\xc3\x84\x88\xb9\xe3\xbc\x82\x53\x8e\x44\x22\x10\xe0\x48\x42\x9f\xc5\xd1\x12\x42\x2a\xee\x80\x2e\xc8\x0c\x81\x4d\x41\xce\x11\x02\x16\x4b\x8c\xa5\x50\xbf\x09\x4c\x59\x14\x22\x57\xcc\x27\x84\x46\xc0\x52\x09\x2c\x06\x12\x2f\x21\x8d\xe7\x24\x0e\x23\x0c\x01\x39\x67\x5c\x38\x02\x25\xf8\xf8\xc6\x71\x4e\x7b\x97\x67\xe3\x5f\xfb\xc3\xd1\xe0\xfa\xaa\xb3\xd7\x6e\x1e\x34\x7f\xd9\x53\x12\x6e\xe6\x08\xd3\x34\x8a\x20\x21\x72\x0e\x92\xe9\xe9\x5c\x91\x26\x09\xe3\xb2\xe5\x42\x48\x39\x06\x92\xf1\x25\xc8\x39\x15\x20\x02\x4e\x13\x09\x54\x40\x2a\x68\x3c\x73\x5e\x41\xfd\x46\x8d\x3f\xd0\x28\x82\x09\x82\x9a\x2f\x4d\x60\xb2\x84\x80\x85\x08\x11\x91\xc8\x81\xc6\x5a\xaa\xe1\x6d\x36\x8c\x2e\xa3\xdb\x0f\x1f\xae\x87\x37\xe3\xde\x60\xd8\x71\x5d\xc7\xf9\x38\xb8\xfa\xd4\x69\x1f\xa8\xcf\xdf\x3a\xaf\xf5\xe7\xc7\xce\xcf\x07\xfa\xcb\x79\xe7\xc7\x9f\x0f\x9c\xc1\xe9\xf5\xd5\x78\x34\xf8\xbd\xdf\x69\x1f\xfe\xe2\xdc\xf4\x3f\xdd\x64\xbf\x5e\x3b\xef\xae\x87\x97\xdd\x9b\x8e\x7b\xdb\xfb\xfd\xda\x75\xba\xbd\xde\xf8\xdd\xe0\xa2\x3f\x1e\x5d\xdf\x0e\x4f\xfb\xa3\x4e\xbd\x51\x8c\xdd\x74\x87\x67\xfd\x1b\x3d\x36\xb8\xec\x9e\xf5\xdf\xf7\x7f\x53\xf3\x9f\xf7\x06\xb7\x37\x83\x0b\x65\xa2\x93\xeb\xd1\xe0\x46\x0f\x8e\xba\x57\xbd\x93\xeb\x4f\xe3\x51\xf7\x5d\xbf\x73\xe0\x8c\xde\x0f\x3e\x8c\xff\xa3\x7f\xf5\x7e\x70\x35\xea\x1c\x38\xce\x34\x8d\x03\x49\x59\x0c\x49\xca\x71\x7c\x8f\x5c\x50\x16\xd7\x1b\xf0\xec\xd4\x30\x98\x33\x70\x3d\xdb\xea\xae\xb3\xb2\x58\x2a\xa8\x03\xed\x09\x7e\xb8\x98\x81\x57\xb7\x45\x36\xca\xac\xa9\x20\x33\x34\x8c\x19\x81\x53\x0b\x88\x84\xe3\xe3\xfe\xf5\x79\xff\xe2\x83\xe3\x18\x9f\x12\xca\x55\x48\x1c\x2c\xa1\x77\x79\x06\x53\x1a\x61\xd3\x71\x6e\x15\xf3\x11\x80\x57\x9f\x10\x81\x31\x59\x20\x78\x07\x0d\xf8\x83\x25\x4a\xb6\xf8\x02\xc7\x2c\x95\x49\x2a\xc7\xea\x51\x33\x5c\xcc\xde\xc2\xb1\x60\x29\x0f\x70\x6c\xdc\xee\xad\xe3\x74\xa3\xa8\xe4\x91\x1b\x04\x6b\x67\x08\x58\x42\x31\x04\x1a\x67\x6e\x55\xf8\x75\xd3\x71\xae\xcd\x84\x47\x0e\x80\xef\xdf\xb3\x48\xab\x72\xac\xfe\xbe\x75\x40\xff\x53\xbe\x74\xcf\xa2\x74\x81\xa0\x1f\xd6\x43\x2a\x92\x88\x2c\xb5\x48\x2d\xf0\x1d\x8d\x43\xe4\x20\x68\x88\x13\xc2\x81\xc4\x21\x3c\xd0\x38\x64\x0f\x20\xa9\x8c\xb0\x91\xcb\xa6\x01\x8b\xe1\x58\xfd\x6d\xd2\x20\x16\x15\x13\xa8\x67\x9a\x7a\x42\x82\xbb\x19\x67\x69\x1c\xc2\x71\x42\x83\x66\x12\xcf\x6c\x72\xb3\x44\xb0\xa8\x4c\x9c\xd6\x13\xce\xee\x69\x88\x90\xc4\xb3\x7d\x98\xd1\xe9\x3e\x30\x0e\xff\x4e\x66\x46\x07\xa3\x95\x9f\x30\x01\xc7\x8f\x6f\xe1\x78\x69\xcb\x4c\x98\xa0\x7a\x63\xd5\x92\xb2\x09\x0c\x83\xcd\x2b\xe8\x13\xc2\xf1\x03\x0d\xe5\xfc\x2d\x1c\xcf\x91\xce\xe6\xd2\x96\xa2\x9f\x67\xe9\x62\x5b\x88\xc4\x47\x99\x89\x50\x5f\xc7\xea\xab\xcd\x9d\x9b\x0d\x1f\x33\x49\xf5\xf6\x81\xdf\x7e\x6d\xb4\x57\xc6\xc9\x98\xd5\xd7\x5d\xcc\xea\x99\xc8\xb8\xd3\x44\xe5\x92\xf6\xe1\x2f\x85\x04\xed\x81\x63\xb3\xcd\xbb\x6d\x90\xaf\x80\x46\xb8\x27\x8a\x6d\x99\xd3\x10\x7d\x7c\x94\x18\x2b\x7f\x87\xe3\xb5\xac\x5c\x88\x22\xd0\x9c\x05\x11\x9b\x6a\x31\x9a\x3f\x48\x85\x64\x0b\xa3\x87\xc5\x0c\xc7\xe6\xc1\x58\xaf\x8b\xf1\xb1\x20\x8b\x24\xc2\xb1\xa2\x78\xfb\x92\x9a\xca\xd5\x0c\x6b\xa1\x23\x49\x12\x3f\xe4\x2c\xf1\x23\x1a\xdf\x6d\x30\x2f\xc8\x9d\xca\xf1\xea\x31\xe8\xc7\x92\x41\x37\x49\x22\x1a\x10\x1d\x06\xfb\x40\x24\x44\xcc\xfc\x82\xc7\xfd\xa5\x96\xf8\x67\xf4\xb7\x04\xa6\x02\x39\xfc\x2b\xa5\xc1\xdd\x05\x63\x77\x40\x63\x21\x49\x14\xa9\x14\x5e\x2d\x1e\xd3\x88\xc0\xb1\xfa\x6b\x16\x9c\x89\x26\x52\x92\x60\x0e\x04\x22\x1a\x60\x2c\xcc\x66\xe4\x47\x83\xca\x4e\xf5\x24\x22\x2a\x02\x95\xb3\x30\x0e\xc3\x9b\x77\x66\x97\x63\xe6\xd3\x58\x22\x8f\x51\xfa\x18\x93\x89\xb6\xbd\xfa\x17\x52\xa1\x7e\x01\x49\x25\x5b\x10\x49\x03\x58\xb0\x34\x96\xf0\xbd\x4a\x11\x46\x97\x29\xe3\x0b\x95\xc3\xcc\xe7\xda\xe6\x09\x06\x74\xba\xcc\x5c\x22\x26\x51\x16\x6e\x19\x75\x3d\xc4\x29\x49\x23\x7d\x1e\xa9\xd4\x6f\xd4\x20\x61\xe8\x6b\x95\x8f\x25\xe1\x33\x94\xf9\x56\xeb\x35\x7e\x3d\xce\xb3\x54\xd9\x9e\x24\x0c\xd5\x7f\xbd\xbb\x24\x32\x4b\x66\x3c\x8f\xa4\x7a\x40\x62\x95\xd1\x52\x81\x21\x2c\xd2\x48\xd2\x44\x99\x84\x2e\x50\x98\x39\x55\x6a\xf3\xb5\x6e\x59\xa0\x3c\xda\x6e\x53\x4e\x7e\x26\x44\x16\x24\x4e\x49\x14\x2d\x95\x61\x1f\xe1\xf2\xc4\xb8\x79\x48\x53\x49\x23\xff\x1e\xf9\x84\x89\xdc\x7c\xf8\x88\x41\x2a\x11\xb2\xa7\x2a\xfb\x65\x04\xb0\x60\x21\x96\x38\xff\x4c\x29\xca\xdd\x7c\xfa\x71\xc1\x25\x48\x1c\x4e\xd8\xa3\x2f\xc8\x74\xd7\x64\x0f\x54\xce\x21\xa3\x83\x80\x2d\x12\x22\xe9\x84\x46\x54\x2e\x75\x10\x84\x0c\x62\x26\x61\x12\xa1\x10\x5a\x24\xc7\x27\x38\xe6\xf8\x34\x56\x80\x22\x37\x42\x2a\x30\x0f\x97\x1c\x67\x0c\xf1\x09\x24\x63\x91\xc9\xd1\xf9\x39\xa6\x2d\x36\x67\x0f\x60\x1d\x86\xd9\x43\x88\xd3\xc5\x04\xb9\xa2\x9f\xef\xab\x15\x63\x94\x18\x86\xec\x5c\x30\x08\x45\x0d\x2b\xa8\x81\x18\x3b\x4e\x76\x20\xd6\xf0\x91\x4a\x38\x50\xa7\xe8\x2b\xe8\xf2\x59\xba\xc0\x58\x42\x42\xb8\xc6\x30\xce\xc3\x5c\xed\xf6\x1f\x7f\x80\xeb\x3d\xb7\x8f\x0e\x8e\xda\x2b\x17\x3a\xe0\xfa\x2e\x7c\xf9\xf2\x06\x42\xa6\x8e\x57\x81\xe0\xb5\x81\xc6\x4e\xad\xb6\x3e\xae\x1a\x4e\xad\x56\xfb\xf5\xfa\xe2\xf6\xb2\x3f\xbe\xea\x5e\xf6\x3b\xae\x77\xe8\xaa\x31\x31\xa7\x53\xf9\x06\xcc\xc7\x9b\x9c\x45\x25\x0a\x9b\x45\xe3\x19\x85\x49\x5e\xe2\x2b\x4e\x1a\xcd\x7a\xd2\x3d\x7d\x7f\x36\xbc\xbe\xbd\xea\x95\x39\x37\xc6\x73\x75\x8a\x43\xde\xf5\x36\x48\xdc\xc6\x26\xe3\xe9\x45\xf7\x76\xd4\xef\xb8\xca\x63\xad\x03\x2e\xa1\x81\x4c\xb9\x3e\x5b\x58\x22\x85\xda\x3b\x1d\x1d\x9f\xdd\x66\x41\x75\xb4\x29\x5e\x6b\xf0\xd9\xd5\x73\x0c\xfb\x1f\x14\xa4\x1a\x5c\x5f\x8d\xcf\x07\xbd\x5e\xdf\xac\x7a\x54\x9a\xd0\x3e\x00\xf0\x1e\xf9\x12\xa8\xc4\x85\x9a\xec\x59\xce\xf1\x84\x49\xc9\x16\x43\x75\xe6\x7d\x82\x1f\xa0\x7d\x70\xb0\xaf\xfe\xac\x76\x59\x6d\x7d\x62\x69\xa3\x15\xc0\xf1\x05\x43\xaf\x4f\x48\xcd\x52\xa0\xcb\x17\x58\x8a\x53\x5d\xf3\x68\x04\xeb\x1d\xbe\x01\x0d\x61\xbd\x1f\xb7\xb8\xaa\x98\xd7\x33\x6a\xbc\x9b\x71\x9f\x7f\x93\x7b\xed\x4b\x6b\xcb\xe6\xc6\xf4\x9e\x37\x86\x56\x9b\xe6\xd5\x86\xfd\xec\x7a\x87\x9f\x5d\x6d\x5f\xef\xc7\x7d\xf0\x7e\x5a\x29\x69\xdb\x2b\xad\x9a\xbc\x7c\x18\x6b\x35\xce\x07\xbd\xc1\xd5\x99\xa5\x44\x69\x60\x95\x27\xc1\xe2\x70\x9e\xd3\x30\xc4\x2a\x75\x24\x4f\xb1\x5a\x15\x33\xb9\x75\x92\x37\xbe\xa1\xad\xcd\x37\x87\xaf\x59\xce\xd0\x5c\x1a\x43\xe7\xa1\x99\xa1\x6c\x35\x9e\x7d\x7f\x03\x26\x63\x64\x14\x0a\x8c\x97\xc8\x6c\x74\xbe\x41\x6b\x9f\xd9\x9a\xf6\x5f\x17\xe3\x8b\xc1\xd5\xfb\x8e\x77\x98\xfd\xda\xe5\xf6\x99\x21\xd6\x07\x78\xbe\x3d\x87\xfb\xe0\xfd\xf8\xf2\xf6\x98\xa9\x4b\x00\x44\xcf\xdd\xfd\xf0\xe1\x62\x70\xda\xd5\xde\x60\x29\x61\x0f\x7f\x43\x1b\x1b\xa4\xfc\x6d\x85\x14\xb4\xd0\x7a\xf4\x6f\x2f\xba\xe3\xe1\x68\x78\x9a\x29\x50\x41\xbb\x0d\x1e\x34\xe7\xd5\xf5\xe0\xea\xa6\x3f\xbc\xea\xdf\x74\xda\x05\xa7\x61\x31\x28\x40\x93\xe5\x05\xe0\xee\x60\x5d\xa3\x82\xaf\x39\x44\xd0\x47\xbb\x31\xd3\x46\x71\xf8\x43\xa7\xae\x24\x95\x9f\x65\xc5\xa4\x7e\xf6\xa3\xfb\x57\x83\x4f\x6b\xf3\xad\x00\xfc\x69\x1f\xbc\x9f\xff\x52\x00\x96\x96\xb4\x01\x3a\xb4\x4a\xbd\xc1\xe8\xfd\x58\x17\xb6\xdf\x4c\x5f\x1b\x60\xc3\xc4\xf1\x56\x19\xbc\x97\x3f\xdf\xdb\x34\x7f\x09\x72\xec\xe4\xd6\x4f\x6d\x5e\xd0\xcc\x36\xf2\xd0\xbc\xa5\x5a\xbb\xbd\x45\xcf\xf1\xa9\x61\xce\x92\xdf\xc7\x1f\xba\x37\xe7\x2f\x2d\x4c\xdc\xd1\xc4\xff\x37\xc6\x77\x34\x36\x99\xb9\x54\xb8\x6f\xba\xd1\x3f\x34\x89\x29\xc1\x6f\xe3\xbb\x98\x3d\xc4\x60\xaa\xe1\x23\xf0\xda\x4d\x18\xa6\x31\xec\x59\x70\xc4\x64\x91\x3d\x85\x41\x35\xd8\x68\x6a\x35\x74\x0e\x68\x2b\x89\x28\x48\x90\x23\x06\xe3\x96\x06\x36\x18\x80\xaa\x8e\xa3\x75\xdb\xc1\x6c\xde\x1d\x2e\xe1\x29\xa2\x13\x3f\xc2\x7b\x8c\x3a\xff\xcf\xd5\x7a\xdd\xf6\x4e\x7e\xdf\x49\x3e\x79\xa2\xc9\x61\x99\xde\x5a\xc6\xdb\xef\x0f\x8b\xa5\x98\x20\x39\xca\x75\xa9\x52\x36\x64\x31\x3a\x0e\x9d\x2a\x08\xe4\x3f\x81\xb2\xac\x46\x3e\x72\x8e\x71\xde\x9c\xb8\x62\x12\x30\x66\xe9\x6c\x0e\x24\x03\x50\xe2\xaf\xd9\xc6\x4c\xe6\x4c\xa9\xe3\xf4\x2e\xcf\xf2\xcd\x6b\xbb\xce\x68\x78\x3a\x7e\x77\x7d\xd1\xeb\x0f\x15\x52\x09\x42\x33\xf1\x5b\x68\x85\x78\xdf\x8a\xd3\x28\x7a\x03\xc9\x43\xd8\x70\x15\x68\xbb\x54\x05\x47\xd6\x7c\x8a\xd8\x8c\x06\x8e\x33\x3a\x1d\x0e\x3e\x64\xfd\x23\xaf\x0e\x9a\xbf\xae\x8a\x9d\x0c\xef\x3c\x9f\x74\x47\xe7\x59\xd4\xfe\x71\xf0\x65\xe5\x42\xc3\x85\xef\xbf\x57\x32\xa1\xe1\x6a\x5d\x7a\x83\x61\x0e\x94\x0a\xbe\x5c\x49\xb7\x20\x5a\xeb\x67\x31\x55\x6a\xaa\x9e\x57\x40\xaf\x4d\x91\x37\xfd\xcb\x0f\x39\x5d\x26\xb2\xc5\x1f\x9a\xde\x73\xce\xbf\xd2\x8b\xee\xa1\xc4\x40\xc2\xc3\x1c\x39\xc2\x03\xee\x71\x04\x9e\xc6\x31\x8d\x67\x30\xe5\x6c\xe1\x38\x02\x63\x49\x63\x8c\x74\xf9\xd6\x71\xbd\xc2\x24\xad\xa6\x02\xc3\x3e\x15\xbe\x9c\xa3\x5f\xec\x90\xcf\x31\x61\x6e\xbe\xd7\x53\x70\xbd\x92\x0c\x7b\xdf\x5f\xc1\xc7\xad\x29\x55\x4d\xa9\x0a\x6d\x02\x4a\x8e\x53\xdb\xee\xe4\xd9\x3a\x64\x5d\x44\xd7\xc1\x48\xe0\xb6\xc0\x5c\x56\x9c\x57\xaa\x18\xae\x6b\x54\xa7\x36\xa1\xf1\x38\xa4\xbc\x24\xd1\x75\x6a\x09\xc7\x29\x7d\xd4\x4f\xec\x4d\xcb\xa8\x55\x5a\xae\xd0\xa9\x60\x6a\x89\x39\xe1\xd8\x2a\x0c\x52\x28\xa9\x1c\xd4\x8a\x01\x0b\xd7\xdb\x56\x29\xc3\xfd\xca\x4d\x86\x66\xb8\x98\x35\x6c\x81\xdf\x81\x1f\xe6\xdd\x40\x4b\xb3\xad\x28\xd3\x81\x7b\x4a\x62\x55\x51\x4d\x69\x1c\x42\xde\x87\x2d\xda\xb0\x47\x80\x8f\x09\x06\x12\x43\xd0\x51\xbd\x25\xb3\x14\x70\xd6\x3e\x17\xd1\xd6\x6a\xf6\x46\xe3\x91\x64\x1c\xb7\xc3\xbc\x87\x11\x4a\xb5\x39\x6b\x1a\x98\x9a\x36\x57\x0c\xa6\xcb\x97\x95\xc4\xae\x53\xe3\x8b\x5d\x62\xf5\xdc\xeb\xd6\xb6\x02\x7e\x3a\x73\x39\x66\x0e\x3d\xac\xe6\xb0\xfa\x81\xcd\x66\xc9\x29\x9f\x4b\x51\xb2\xb2\xf5\xe4\x8b\x6a\x92\x6c\xce\x5b\x81\x70\x89\x33\x32\x59\x4a\x14\x20\x68\x1c\x14\xa5\xec\x94\xd0\x48\x98\x82\x56\x57\x18\x11\xe1\x33\x04\x45\x99\xd5\x96\xa2\x68\xb2\x4e\x22\x16\xdc\x89\xb1\x64\xe3\x45\x2e\xcd\xb4\x5c\x5f\x41\x37\x0c\xa1\xad\xa0\x2c\x27\x70\x79\xb2\x9f\x4d\x22\x55\x94\xee\x09\x88\x19\x84\x18\xd0\x05\x89\x80\xa3\x54\xc1\xa5\xd0\x2e\x72\x74\x6a\x97\x27\xe6\x4c\xf6\xea\xf5\xba\xd7\x86\x7f\xc0\xcf\xed\x43\x68\xa9\x42\xe6\x20\xfb\x68\xa8\xe2\xa6\xd1\xc8\x76\xc3\xcb\x18\x4a\xdd\xdf\x19\x9a\xee\x5d\xae\xcd\x99\xaa\xd6\x94\xb2\xa6\xad\x40\x63\x6d\x56\xa7\xa6\x55\xd6\x94\x2a\x50\x52\xf0\x05\xa8\xac\x0b\x5f\x41\x60\x08\x3e\xc2\x9e\x68\xd5\x9a\xff\x68\xb5\x66\x7b\xeb\xf9\xea\x15\xab\x06\xaf\x90\xd4\x30\x15\xb4\xb5\xaf\xbd\xcb\x33\x63\x50\xdd\xe0\xd7\xdd\x1a\x8a\x61\xd6\x8c\xe4\x7a\x34\xb7\x3e\x0a\x49\x17\x26\xb8\x4f\x6f\x47\x37\xd7\x97\xc6\x18\x7b\x7b\xf9\xc6\xc7\x2a\x88\xca\xf0\xc5\xde\x78\x9b\xc9\x35\x5d\x16\xef\x79\x83\x7e\xb5\xb0\xc3\xce\xb3\x31\x05\xf8\xf8\x27\x1c\x58\xf2\x72\xbd\x4c\x2e\x00\xef\x79\x0b\xbd\xac\xc0\x17\x3c\xc8\x5a\x40\xb6\xab\xbb\xb0\xee\x58\xbb\xde\xb3\x95\x12\x56\x2e\x7c\x56\x98\x62\x2a\xe0\xfc\xdd\xe8\x07\xf0\xa7\x82\xf0\x99\x00\xd7\x0f\x20\xe8\xbc\xfe\x69\x9f\x74\xda\xaf\xf7\xb1\xd3\x7e\xed\x42\xde\xf2\xba\xed\x0d\x3f\x82\xf7\x6c\x2d\x6f\x55\xe5\xde\x2a\x87\xd6\x0a\xad\x17\xe4\x0e\xe7\xcb\x09\xa7\xe1\x0e\xcd\xb3\xd6\x98\x6f\x1a\xdc\x7e\xb5\xb2\xfe\x7c\x2a\xc0\x67\x55\x11\x57\x5a\xaf\x65\x2d\x16\xdf\x23\x97\x65\xed\x7d\x76\xbf\x53\xca\xd6\x42\x36\x21\xea\xd8\xac\xbc\xb3\xb9\xf7\x59\x40\x9f\x65\xa5\xa3\xd9\xa6\x50\x7b\x1c\x09\x64\x4a\x22\xed\x65\xce\x26\xe0\xf5\xea\x79\x84\x54\x4c\xde\xc8\x53\x84\x96\x68\x1a\x52\x26\x6c\xa6\x30\xa1\xb3\x19\xf2\x9d\xae\xd3\x86\x2f\x5f\x14\x7c\x30\xe9\xfc\x69\xdb\x57\xb3\x75\xb8\x05\xdd\x0e\x0a\xf0\x67\x72\xeb\x99\xe5\x98\x5b\x2b\xaa\x16\x93\xd9\xa7\x6f\xc2\xca\x2c\xc9\xea\x60\x0a\xc6\xd3\x00\x4d\x3f\xde\x8e\xb0\xcd\x7a\xc6\x0e\x31\x05\xdb\xa8\x4a\x21\xae\xf7\xfc\xdd\x26\xe1\x1f\xff\xff\xcb\xca\x35\xed\xb0\x9a\x19\xaa\x32\xf8\x16\x97\x47\xbf\xac\x74\xb5\xb4\xbd\x51\xf8\x98\xf0\x6d\x43\xfc\x00\x9e\x25\xbe\xe1\xd4\x34\x3c\x35\x8b\x55\xa9\xd7\x24\x5e\x91\x10\x7d\x16\x71\x7b\xcd\x1c\xcd\x19\x25\x2a\xbc\x62\xd7\x64\x87\x07\xda\x29\x86\xa8\x57\xb0\x3e\xab\xb4\xe8\xac\x65\xa1\xa6\x93\xe9\x74\xea\xe4\x41\xc0\x31\x4b\x3f\x95\x29\x63\x47\x66\xaa\x8a\x05\x85\x6c\x75\x27\x5c\xcd\x14\xe3\x83\xf2\x6e\xc7\xb9\xbc\xbe\xbd\xca\xa0\x4b\xeb\x57\x1d\xbe\xa2\xb5\x11\xb9\xda\x8f\x63\xd3\x45\x8f\x70\x2a\xd9\x3d\x72\xdd\x9b\xa7\xaa\xbc\x84\x07\x22\x4c\x8b\x1d\x43\x48\x38\xde\x53\x96\x8a\x68\x09\x75\x6c\xce\x9a\x10\xaa\xb2\x81\x25\xc8\xd7\x24\xe1\x62\xb6\x6f\x81\x30\x92\x24\xba\xb7\x3b\x65\x7c\xc6\xa4\xbe\x59\xc8\xa6\xa2\xb2\x91\xfb\x92\x02\x34\xcf\x6b\x4d\x57\xdb\x50\x22\x53\x4f\x1d\xf4\x2c\x0a\xed\xfe\xb7\x46\x92\xde\x9a\x57\x1f\xfe\xb5\x5e\xff\x57\x83\xaa\xbc\x7a\xd1\xaf\x9e\x32\xf8\x0a\x38\xe3\x98\x80\xef\x07\x2c\x62\xbc\x13\xa3\x5a\xea\xde\x7f\x6a\xec\xbd\x97\x1d\x67\xed\x3f\xe1\x2b\x90\x87\x3b\xd8\x7b\x4e\x38\x8d\x25\x78\xed\x95\x3a\xd6\x72\x49\x21\xea\x2b\x0d\xb5\x03\xd9\x34\x19\x60\x30\xaa\x5e\xe6\x8a\x6e\x20\x12\xfb\xb1\x0d\xc1\x0a\xdd\x5d\xa7\x42\xef\xec\x02\xc5\xe7\x48\xc2\x07\x4e\x25\x82\x1f\xab\x0d\xa2\xd3\xa5\xfa\x46\x52\xc9\x58\x82\x71\x55\xbe\xfc\xbf\xac\x36\x47\x70\xf7\x34\x30\x37\xa6\x47\xba\xf7\xee\xe5\x1a\xba\x8e\x9d\x07\x36\xdb\xc1\x5b\xfb\x77\xca\x92\xa5\xb2\x89\xd5\x0a\xd6\x77\xc8\x7a\xb7\x72\x0f\x58\x1b\xa2\x65\x35\x83\x75\x0a\xfc\xfa\x15\x16\x77\x21\xe5\x3b\x89\x9c\x5a\x90\x54\xe9\xb1\x83\xbe\x55\xd9\x61\x2e\xc1\x76\x9d\xde\x36\x3a\x5e\xdb\xeb\xba\x24\x77\x6a\x59\x55\xb7\x70\x6a\x8f\xcd\xfa\x32\xfc\x95\x2b\xe2\xd4\xa2\x58\x21\xa8\x56\x89\xda\xd6\xd4\x7e\xb0\xa5\x54\xd6\x02\xfc\xa6\x2e\x95\x77\x77\x2f\x2a\xe4\xb6\x2e\xe8\x84\x13\xbe\x6c\xad\x79\xcb\x16\x2c\x86\x37\x95\xda\xbc\x85\xd8\xed\x01\xd6\x1d\xb9\x69\xfd\xef\x6d\x31\xef\x19\x2d\xf5\x8e\x6e\x0b\x2e\x6d\xa9\xc9\x68\x83\xfc\x32\xde\x75\x6a\x23\x94\xef\x94\x58\x3f\x00\x1a\xc4\xa7\xdf\x20\xdf\xdc\xf0\x17\xce\xb3\xf2\x32\xb2\xf3\x5e\xad\x40\x18\x75\xff\xf2\x79\x97\xbd\xce\xb1\xe3\x74\x73\x6a\x6a\xe1\x3e\xd9\x4d\x51\x5a\x92\x45\x94\xf5\x1b\x73\x31\xd6\x49\x37\x4c\x63\xed\x9a\x38\x32\x4d\x0f\xc9\x20\x64\xa0\x5c\xc2\x7a\xf1\x21\x60\x62\x81\x92\x06\xd9\xf1\xa4\x7c\xbf\x9f\x55\xcb\xfa\x76\xc8\xab\x2f\xee\x24\x2e\x12\xf0\x65\x8e\x9f\x16\xb3\xa6\x5c\x24\xcd\x4f\xeb\x7f\x8d\x17\x11\x4f\xd9\x92\xa3\x3b\x9a\x24\xca\x94\x66\x7e\x3f\xe1\x28\x25\x9d\x6a\xeb\xda\xca\x4e\x30\x20\xa9\x40\x78\x40\x20\x5c\xd7\x24\x23\xd3\xee\xd3\x66\x37\xdd\x80\x7c\x56\xab\x35\xb7\x05\xd1\xf5\x6b\x2d\xdb\x75\x73\x4b\xad\x29\x22\x12\x9b\x44\x4d\x6a\xda\x42\x06\x79\xd7\xd6\xe5\x8d\x2b\x5a\x1f\x07\x57\x9f\x5a\x9e\xfe\x3b\x73\x8b\xb1\xdf\xf4\xd8\x6f\xa5\xb1\x8f\x7a\xec\xa3\x1a\xd3\x62\x6a\xb5\xf5\xa3\x73\xfd\xe8\xbc\x20\xdf\xba\x32\x2b\xa5\xa6\x6c\x68\x53\xd0\xcb\x77\x60\x2d\xef\x1b\xcf\x37\xc5\xad\xaf\xb4\x5a\x5e\xf1\x75\xad\xe1\xfa\xf6\xaa\xe5\x15\x5f\x67\x6b\x0b\x25\xc8\x23\xf0\x13\x4d\xba\xd1\xaf\x6e\x79\x9b\x03\xd5\x6c\xeb\x6b\x8c\x96\x57\x7c\xad\x26\xdd\xbe\x6c\x68\x79\x15\x63\xd5\xcc\xa5\x6b\xa4\x96\x57\xfe\x99\x71\xbc\xcd\xd2\xbe\xed\xfa\x2a\x26\x45\x84\x98\xc0\x21\xbc\x82\x44\x7b\xa3\x64\xf0\xc0\xf8\x1d\x31\x67\x19\x0b\x02\x22\x0c\x6c\x74\x4f\x49\xfc\x3f\xff\xf5\xdf\x52\xd5\xd6\x1a\x02\xb8\x50\xf7\xdb\xff\x3c\xfc\xa5\x01\x54\x88\x14\x05\xc0\x3a\x07\x0c\xb3\xe6\xd5\x46\x6c\xea\xd7\x31\xf2\xd7\x91\x54\x30\x82\x8e\x8d\xe5\x11\xac\x5f\xfa\x63\x82\x64\x0d\xcc\xcf\x2a\x4f\x6c\x28\xbc\xfa\xec\xea\x71\x1b\xe5\x99\xeb\x53\x3a\xad\x92\x51\x25\xc2\xdd\x2a\xf0\xd6\x81\x54\x7b\x05\xd7\x77\x64\xb9\x9f\xb5\x11\x03\xc6\x22\x35\x9a\x5d\xb6\x99\x88\xb4\xbb\xc7\xef\x08\x55\x48\x90\x6f\xaf\x56\x37\x90\x5f\xc4\x55\x79\x83\xf9\xf5\x4f\x4e\xad\x36\xa5\x6b\xd3\xf5\x58\x5c\x34\xff\x54\x16\xb3\xa4\x9a\x7c\x9c\x6d\x99\xe2\xd3\xcd\xa5\x8a\x5d\x9d\xd2\x2c\x41\x5e\x2a\x8b\x8b\x54\xa5\x17\xa9\xdb\x2e\x52\xed\x6e\x14\x82\x46\x5c\xfa\xe5\x13\x33\xed\x3b\xfa\xa8\x26\x4c\x90\x2f\xa8\x50\x3b\x6e\x92\x7f\x30\x5f\xb0\x10\xfc\xe1\x14\x66\xcc\x7f\xd8\x04\xb3\xdf\x5b\xcd\x5d\x05\x65\xb4\xa1\xac\x65\x4c\xb7\x84\xba\x6b\xa5\xd4\xd2\x24\x4b\xf2\xd7\xa2\x34\xd4\xa3\x52\x60\x34\x05\x16\x1b\xcc\x7d\xf4\x97\x3a\x14\x66\xbe\x93\x08\x85\x50\x93\x09\x49\xb8\x44\x05\x9c\xf4\xdb\x16\xfa\xa5\x99\xac\x35\x51\xd2\xdd\xf7\xd5\x94\x95\xcf\xb6\x64\x4e\x69\x4c\xc5\x5c\x09\x35\x3e\xb0\x91\xe7\x27\x39\x1d\x8b\xf3\x77\x40\xfe\x16\x8e\x78\x05\x37\x98\x1d\x59\x19\x88\x90\x73\xa2\xca\x08\x98\x13\x01\xc4\x74\x8c\xf2\xd7\x6d\x88\x94\x9c\x4e\x52\x89\x16\x22\x20\x50\x82\x03\xeb\x2e\x9f\xa9\x2d\x9c\xad\x4a\x63\x03\xc0\xbf\xe8\xa7\xce\x2b\x38\x65\x8b\x84\x2b\x5b\x96\xfa\x93\xd9\xe0\x0b\xf2\xf2\x2e\x48\x65\x05\x58\x01\xeb\xf3\x6e\x89\xf7\x6c\x6e\x61\x56\xe0\x3d\xe7\xf7\x3a\x2b\xab\x75\xa2\x36\xa9\x55\xba\x06\xd8\xd9\xee\x34\xd5\xb0\xd2\xb1\x7f\x7b\xd1\xb5\x4a\x5f\x6b\x6b\x9e\xd7\xf7\xae\x2b\x7d\xf5\xb1\x31\xf2\x5d\x07\x5c\x5f\x79\xb8\xbf\x0d\x9a\x2a\x65\x9b\x28\x1d\xf6\x7f\x1f\x77\x87\x67\x1d\x95\x9d\xec\xc9\xf2\xab\xb9\xf5\x5c\xd6\x40\xf5\x54\x85\x28\xf3\xde\x90\xcd\xe2\xe4\x59\xe9\x31\x60\x21\xea\xb7\x89\x3a\x5e\x5d\xff\xf0\x05\x46\x18\x48\xf0\xf5\x5d\x7e\xd6\xe8\x1a\x73\x7c\xea\xb8\x5e\x41\xdd\xba\x61\x2c\x12\xad\x21\x3e\xb9\x55\x33\x59\x6c\x2b\x93\x57\x6a\xae\xf7\xbc\x09\x35\x56\xad\xec\x25\xb8\xde\xe5\x59\x33\x59\xba\x3b\x37\x6a\xd3\xb6\x66\x29\xdd\xe1\xd9\x2a\xef\xd3\xe8\x3b\x6d\x70\xf3\x4b\x6e\x77\x1f\x1e\xe6\x44\xea\xfa\xce\x04\x85\x28\x6e\x0b\x9e\x94\xb8\xe2\xea\x7b\x6d\xd1\xd2\x50\xa7\x53\x01\xd1\xae\x98\x04\xa1\x50\x59\x3c\x83\xbd\x8d\x0b\xf5\x3d\xc8\x5e\x32\xd5\xf5\x7e\xa2\x00\xa4\x2a\xf8\x39\x70\xfc\x33\x45\x61\x5d\xd4\x9c\xce\x31\xb8\x03\x3a\x5d\x37\x6f\xb3\x8b\x08\x01\x9b\x2f\xf8\xd5\x5e\xc1\xc8\x3c\xd3\x4d\x07\x8e\x0b\x76\x6f\x5e\xd0\x5d\x90\xe0\x7a\x04\xed\x83\x66\xfb\xe7\x26\x8c\x10\x61\x2e\x65\x22\x8e\x5a\xad\x19\x95\xf3\x74\xd2\x0c\xd8\xa2\x45\xe2\x90\xe3\xf2\x9e\x4a\xfb\x46\xc6\x9c\xb9\xad\x7f\xbe\xd6\xee\x55\x34\x03\x4a\x13\x83\xbe\x69\x84\xb7\x45\x96\x3e\x7c\x6b\x5d\xc7\x65\xfe\xb5\x93\x79\x89\x62\x77\xcc\xe5\x9e\x67\x2c\xba\xce\x21\x0c\xcd\x31\x93\xd9\x62\x53\x68\x13\xae\x98\xc4\xbc\xfb\xb2\xc3\x10\xf6\x09\xd6\x55\xf5\x1d\x8b\xf1\xbb\xfc\x60\x29\x3a\x24\x6a\xd8\x75\xb2\xb7\xd6\xfe\x37\x00\x00\xff\xff\xac\xd0\x92\x9e\x39\x30\x00\x00")

func createDmgBytes() ([]byte, error) {
	return bindataRead(
		_createDmg,
		"create-dmg",
	)
}

func createDmg() (*asset, error) {
	bytes, err := createDmgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create-dmg", size: 12345, mode: os.FileMode(0755), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x75, 0xb2, 0x6, 0xf2, 0xb3, 0x61, 0x18, 0x25, 0xf4, 0xe3, 0x2a, 0x62, 0x6c, 0xbe, 0x32, 0x99, 0x23, 0x14, 0xee, 0x6c, 0xe7, 0x7f, 0x2d, 0x11, 0xf6, 0x74, 0xf4, 0xd0, 0x8e, 0x46, 0xd2, 0xf}}
	return a, nil
}

var _docProjectDeveloperNotesMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x6e\xe3\x46\x0c\xbd\xeb\x2b\x1e\x9c\x43\x2e\xb1\x37\xdd\x2d\xd0\x05\x72\x08\x16\x68\xd1\xbd\x34\x2d\x9a\xc5\x9e\x43\x49\xb4\x34\x8d\x34\x23\x90\x1c\x3b\xfe\xfb\x82\x23\xc9\x8e\x0b\x14\xd8\xdb\x68\x48\x3e\xf2\xf1\xbd\xd1\x0d\x1a\x61\x32\xde\xb6\x63\x87\x5f\xf9\xc0\x43\x9a\x58\xf0\x94\x8c\xb5\xaa\x6e\x6e\xf0\x37\x4f\x09\x03\x9d\x52\xb6\xaa\xda\xe2\xe5\x92\xfe\x82\x10\x61\x3d\x43\x52\x32\xa4\xfd\x7c\xf6\xf4\xa0\xe5\x3c\x52\x88\x98\x24\x75\x42\xa3\x97\x6a\x9e\xa6\x24\xf6\xe1\x05\x4d\x8a\x46\x21\x2a\x28\xbf\x85\x21\x90\x9c\xa0\x8d\x84\xc9\x14\x59\xb9\x45\x7d\xba\x6a\xf4\x80\x60\x18\xb3\x1a\x6a\x06\x19\xac\x27\x83\xf0\x40\x16\x0e\x8c\x29\x69\xb0\x90\x22\x2c\x5d\x55\x79\xcb\x3a\x87\xa1\x65\x79\xdf\xf2\xf1\xf1\xf1\xd1\x43\xfc\x46\xe3\x34\xb0\xbe\x8f\x65\x65\xd9\xee\xa9\x09\xb1\xc3\x1a\xf7\x5c\x63\xb5\xab\x44\xe1\x4e\x58\xb5\x74\xf5\x18\xf6\x49\xd0\xae\xeb\x2b\x35\x6d\x6a\xb6\x93\xa4\x7f\xb8\xb9\x62\x7c\x4e\x5a\xfb\xb4\xa9\xc9\x23\x47\xa3\xc2\x81\xea\x94\x9d\x60\x50\x2c\xc5\xae\xc2\xcd\xdc\xe5\x43\x55\x7d\xeb\xf9\x32\xce\x3e\x39\xb9\x1f\x9e\x6a\x57\x55\xbf\x51\xd3\x97\x98\x6b\x14\x22\x82\x29\xd2\x31\x42\x73\x3d\x83\xed\xe6\x94\xf3\x37\x22\x8d\x0c\xed\x53\x1e\x5a\xa8\x91\x18\x8e\xc1\x7a\x10\x3e\x6d\xdb\xd0\x05\x43\xcc\x63\xcd\x32\x6b\xb2\x08\xbf\x5c\x2d\x96\x68\x92\x08\xeb\x94\x62\xeb\x74\xeb\xdc\x15\x93\x88\x79\xff\x8b\x5c\xb7\x8a\xdf\x83\x7d\xcd\x35\x82\x6a\x66\x98\x50\xf3\xea\xf3\x14\xca\x33\x1d\x12\x76\x91\x6b\x86\xe4\x88\x91\x62\xa6\x61\x38\xdd\xcd\x13\xcd\xee\xd3\x3c\x98\x16\xed\x42\xe4\xf6\x9c\xb3\x73\x14\xe1\x5b\x45\x4c\xa0\x6c\x69\x24\xe3\x76\x31\x9d\x63\x3a\xa0\xf5\x3c\x82\x14\x04\xcd\xc1\x18\x14\x5b\x34\x3d\x37\xaf\x1e\x09\xb2\xa2\x3b\x16\x19\xc6\xd0\xf5\xc5\x90\x31\x34\x65\xac\x9e\x0e\xbc\x9b\xd5\x3a\x7b\x6b\xd9\xf8\xf2\xfd\xff\x4b\x77\x8e\x97\x9d\x4f\xc2\xfb\xf0\xb6\xae\x31\x38\xf1\x3a\x98\x90\x9c\x1e\x7c\x14\x5d\x37\xac\xab\x30\x92\x72\xd7\x0f\x27\x9f\x26\x44\x24\x69\xe7\xed\x6f\xa8\x3d\x50\x6c\xb8\x8d\xac\xba\xf1\x9b\x75\xb0\x3b\x68\x2a\x8f\x8a\x5e\x59\xa1\x1c\x95\x8b\x59\xfc\x01\xa8\x93\xe9\x12\xac\x2f\xb0\xf3\x5a\x56\xd8\x42\x10\xdf\x59\xdc\x65\x21\x76\x55\xf5\x45\x1d\xf8\x0f\x3a\xe1\xe3\xfd\xc7\xfb\x3b\x1c\xf9\x56\x18\x59\x5d\xec\x67\x1e\xbf\xb3\xe0\x70\x4e\x9f\x99\xa6\xa1\x5d\xef\xce\x4c\x8e\x2c\x8c\x9f\xb7\x13\x89\xb1\xe8\x1d\x86\xf0\xca\xd8\xfc\xb4\xbb\xdf\xdd\xef\x7e\xd9\xec\xaa\xa7\x74\xc4\xd1\x71\x19\x9f\x4a\xd6\x7f\xc0\xaf\x4a\x3e\x6f\xbc\x51\x50\x34\x3d\xc5\x8e\xd1\xd3\x34\xb1\xfb\x81\xf6\x76\x29\xc1\x82\xfe\x50\x0e\x9f\xcf\xee\xe5\xb7\xf2\x77\x61\x52\x5e\x0a\x96\xc4\xc5\x8c\x9a\xf7\x2e\xcf\x66\xfb\xfc\xf4\xe5\xaf\xe7\xaf\x7f\x7e\xdb\x78\x69\xf9\x71\x59\x42\xcb\x31\xb9\x79\xce\x5d\xd6\x97\xa1\x16\x86\x01\x39\xba\x38\xcb\xa3\xf4\x77\xbf\xab\xfe\x0d\x00\x00\xff\xff\xe8\xd2\xf1\xb4\x84\x05\x00\x00")

func docProjectDeveloperNotesMdBytes() ([]byte, error) {
	return bindataRead(
		_docProjectDeveloperNotesMd,
		"doc-project/Developer Notes.md",
	)
}

func docProjectDeveloperNotesMd() (*asset, error) {
	bytes, err := docProjectDeveloperNotesMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc-project/Developer Notes.md", size: 1412, mode: os.FileMode(0644), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6b, 0xce, 0x4, 0xaf, 0xe6, 0x3d, 0x60, 0x12, 0x7c, 0x46, 0x19, 0x81, 0x96, 0x2d, 0xa8, 0x25, 0xf3, 0x79, 0x1b, 0x5f, 0xbb, 0x73, 0x1c, 0xa3, 0xda, 0x4b, 0xed, 0x49, 0xcc, 0xfb, 0x8f, 0x9a}}
	return a, nil
}

var _docProjectReleaseChecklistMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x8a\x51\x39\x70\x72\xdf\x01\x72\xa0\x27\x8a\xda\x22\xe5\x86\xb7\xf1\xc6\x31\xc4\x3f\xb2\xd7\x51\x1f\x1f\x11\x5a\x24\xa4\x5e\x77\x67\x3e\x7d\xf3\x80\x03\xcf\x4c\x95\xd1\x4d\x3c\x7c\xcd\xbe\x8a\x52\x1a\xef\xd9\x92\x30\x64\x62\x2c\x5c\xaa\x4f\x11\x3e\xc2\x0c\x85\x49\x58\xdb\xe0\xcc\x63\x85\xc9\xad\xf0\xc7\xf5\x6f\x30\xb6\x38\x88\x4f\x51\x01\x1a\x07\x0e\x69\xf9\x05\x6c\xf4\xf1\xf5\xe9\xed\xb8\xdb\x9f\x36\xa8\x6d\x1c\xfd\x45\x69\x74\x29\x04\x2f\x4a\xe3\x44\x6e\x4d\x95\xab\x06\x55\x98\xa5\xdf\xf6\xdb\xde\x28\x0d\xe3\xbc\x20\xb7\x3a\x41\x6b\x21\x57\x7f\x6e\xdd\x2a\x01\xfa\xab\xa4\xb8\x12\x5e\xbc\xec\xda\x19\xb9\xa4\x4f\x1e\x04\x99\x1c\x2b\x8d\x7d\xe6\x08\xcb\x0b\xcf\x29\x07\x8e\x72\x4b\x47\xbe\xc8\x8d\xb0\x1a\x3f\xb7\x90\xff\x0d\x8e\x2d\x9c\xb9\x80\xa2\x05\x59\x0b\xba\x33\x04\x92\xe0\x45\x7d\x07\x00\x00\xff\xff\x07\xc5\x58\xd6\x45\x01\x00\x00")

func docProjectReleaseChecklistMdBytes() ([]byte, error) {
	return bindataRead(
		_docProjectReleaseChecklistMd,
		"doc-project/Release Checklist.md",
	)
}

func docProjectReleaseChecklistMd() (*asset, error) {
	bytes, err := docProjectReleaseChecklistMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc-project/Release Checklist.md", size: 325, mode: os.FileMode(0644), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9c, 0x6a, 0x79, 0x7f, 0xa5, 0x52, 0x70, 0x39, 0xce, 0xeb, 0x4a, 0x97, 0x33, 0x8e, 0xda, 0xd2, 0x9a, 0x3d, 0xd4, 0xf7, 0x99, 0x4e, 0x48, 0x4, 0xd2, 0xb8, 0x4e, 0x99, 0x71, 0x86, 0xa5, 0xd5}}
	return a, nil
}

var _supportLicenseLicensedmgPyhacker = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xa3\x36\x14\xbf\xf3\x29\x7e\x9a\xd3\xae\x44\xa7\xbb\x2b\xf5\xd0\xde\x3c\xe0\x04\xb7\xc4\x8e\x8c\xb3\x69\x8e\x06\xcc\xe0\x8a\xe0\x08\x3b\x1d\xe5\xdb\x57\x8f\x64\xb6\x9d\x9e\x10\x7e\xef\xf7\xf7\x15\xe1\x72\x5b\xfc\xeb\x98\xf0\xa9\xfb\x8c\x6f\x5f\xbe\xfe\xf2\xd3\xb7\x2f\x5f\x7f\xc5\xef\x76\x71\x3d\xaa\xd0\xb6\x31\xcb\xf6\x6e\x39\xfb\x18\x7d\x98\xe1\x23\x46\xb7\xb8\xf6\x86\xd7\xc5\xce\xc9\xf5\x39\x86\xc5\x39\x84\x01\xdd\x68\x97\x57\x97\x23\x05\xd8\xf9\x86\x8b\x5b\x62\x98\x11\xda\x64\xfd\xec\xe7\x57\x58\x74\xe1\x72\x43\x18\xb2\x34\xfa\x88\x18\x86\xf4\x66\x17\x07\x3b\xf7\xb0\x31\x86\xce\xdb\xe4\x7a\xf4\xa1\xbb\x9e\xdd\x9c\x6c\x22\xbd\xc1\x4f\x2e\xe2\x53\x1a\x1d\x9e\x9a\x07\xe2\xe9\xf3\x2a\xd2\x3b\x3b\xc1\xcf\x19\xcd\xde\x47\x78\xf3\x69\x0c\xd7\x84\xc5\xc5\xb4\xf8\x8e\x38\x72\xf8\xb9\x9b\xae\x3d\x79\x78\x1f\x4f\xfe\xec\x1f\x0a\x04\x5f\x1b\x88\x48\x21\xbb\x46\x97\xaf\x3e\x73\x9c\x43\xef\x07\xfa\xba\x35\xd6\xe5\xda\x4e\x3e\x8e\x39\x7a\x4f\xd4\xed\x35\xb9\x1c\x91\x1e\x3b\x37\x13\xca\xce\xfd\xcf\x61\x41\x74\xd3\x44\x0c\xde\xc5\x2c\x0c\xf8\xaf\xbb\x75\x87\xac\x5f\xa8\xd0\xf4\xa8\x88\x74\xf1\x36\x86\xf3\x87\x5d\x6a\x7a\xb8\x2e\xb3\x8f\xa3\x5b\x31\x7d\xc8\x62\x58\x15\xff\x72\x5d\xa2\x17\x5a\x1f\xc2\x34\x85\x37\x8a\xd6\x85\xb9\xf7\x94\x28\xfe\x96\x65\x66\x74\xb0\x6d\xf8\xdb\xad\x59\xee\x07\x9e\x43\xf2\xdd\xbd\xee\xf5\x00\x97\x7f\xaf\xfa\x18\xc5\xd1\x4e\x13\x5a\xf7\x28\xcc\xf5\xf0\x33\xec\x34\x65\xf7\x38\xa0\x74\xd7\x36\x26\x3b\x27\x6f\x27\x5c\xc2\xb2\xea\xe1\x7f\x31\x9f\xb3\xcc\x54\x1c\x8d\xda\x98\x23\xd3\x1c\xa2\xc1\x5e\xab\xef\xa2\xe4\x25\x9e\x58\x03\xd1\x3c\xe5\x38\x0a\x53\xa9\x83\xc1\x91\x69\xcd\xa4\x39\x41\x6d\xc0\xe4\x09\x7f\x08\x59\xe6\xe0\x7f\xee\x35\x6f\x1a\x28\x9d\x89\xdd\xbe\x16\xbc\xcc\x21\x64\x51\x1f\x4a\x21\xb7\x78\x39\x18\x48\x65\x50\x8b\x9d\x30\xbc\x84\x51\x20\xc1\x07\x95\xe0\x0d\x91\xed\xb8\x2e\x2a\x26\x0d\x7b\x11\xb5\x30\xa7\x3c\xdb\x08\x23\x89\x73\xa3\x34\x18\xf6\x4c\x1b\x51\x1c\x6a\xa6\xb1\x3f\xe8\xbd\x6a\x38\x98\x2c\x21\x95\x14\x72\xa3\x85\xdc\xf2\x1d\x97\xe6\x19\x42\x42\x2a\xf0\xef\x5c\x1a\x34\x15\xab\x6b\x92\xca\xd8\xc1\x54\x4a\x93\x3f\x14\x6a\x7f\xd2\x62\x5b\x19\x54\xaa\x2e\xb9\x6e\xf0\xc2\x51\x0b\xf6\x52\xf3\xbb\x94\x3c\xa1\xa8\x99\xd8\xe5\x28\xd9\x8e\x6d\xf9\x8a\x52\xa6\xe2\x3a\xa3\xb5\xbb\x3b\x1c\x2b\x4e\x4f\xa4\xc7\x24\x58\x61\x84\x92\x14\xa3\x50\xd2\x68\x56\x98\x1c\x46\x69\xf3\x03\x7a\x14\x0d\xcf\xc1\xb4\x68\xa8\x90\x8d\x56\xbb\x3c\xa3\x3a\xd5\x86\x56\x84\x24\x9c\xe4\x77\x16\xaa\x1a\x1f\x2e\xa2\xf4\xfa\x7f\x68\xf8\x0f\x42\x94\x9c\xd5\x42\x6e\x1b\x02\x53\xc4\xf7\xe5\xe7\x7f\x02\x00\x00\xff\xff\x30\x0c\x76\xc6\x23\x04\x00\x00")

func supportLicenseLicensedmgPyhackerBytes() ([]byte, error) {
	return bindataRead(
		_supportLicenseLicensedmgPyhacker,
		"support/LICENSE-licenseDMG-pyhacker",
	)
}

func supportLicenseLicensedmgPyhacker() (*asset, error) {
	bytes, err := supportLicenseLicensedmgPyhackerBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "support/LICENSE-licenseDMG-pyhacker", size: 1059, mode: os.FileMode(0644), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x45, 0x8d, 0x5f, 0xd4, 0x17, 0x58, 0x25, 0x44, 0xa, 0xd3, 0x2d, 0x6b, 0xf6, 0xaf, 0x45, 0xd1, 0xa1, 0x9d, 0x4a, 0xdb, 0x31, 0x6b, 0x55, 0x7d, 0x86, 0x9c, 0x65, 0x60, 0xb6, 0x69, 0x2e, 0x0}}
	return a, nil
}

var _supportReadme = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\xbd\x4e\xc4\x30\x10\x04\xe0\xde\x4f\x31\x52\x0a\x1a\x62\xf7\x08\xd1\xc0\x89\x1f\x01\xcd\xf1\x02\xb6\xb3\x89\x97\xf8\x62\x6b\x77\xaf\xc8\xdb\xa3\x93\xf8\x11\xed\x48\xdf\xcc\x0c\xc8\x42\xd1\x68\x9c\x4e\x0b\xf4\xdc\x7b\x13\xc3\xcc\x95\xd4\xb9\x61\x40\xe5\x4c\x9b\xd2\xc3\xdb\xa3\xef\xbb\x73\x1f\x85\xfe\x47\xd0\x2c\xdc\x0d\xac\xb0\xb8\xd2\x86\x59\xda\x09\x2f\x51\x68\xc2\x53\x4b\x49\xaf\xd0\xf7\x12\xf3\x4a\x82\xca\x49\xa2\xec\xd7\x88\x86\xdb\x62\xd6\xf5\x26\x84\xc4\x96\xce\x79\x25\xf3\x4d\x96\xf0\x79\x81\xe5\xe2\xc2\x0f\xbb\xf3\xce\x1d\x89\xf0\xfa\x7c\x7f\x78\x3f\x1e\xc6\xbf\xf9\xf1\xb7\x79\x6e\xf2\x7d\x8b\xb7\x05\x13\x59\xe4\xaa\xfe\x2b\x00\x00\xff\xff\xa2\x0b\xb7\x76\xdb\x00\x00\x00")

func supportReadmeBytes() ([]byte, error) {
	return bindataRead(
		_supportReadme,
		"support/README",
	)
}

func supportReadme() (*asset, error) {
	bytes, err := supportReadmeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "support/README", size: 219, mode: os.FileMode(0644), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0x81, 0x33, 0x80, 0xc8, 0x51, 0x9d, 0xc7, 0x67, 0x3b, 0x3, 0x7a, 0x10, 0x97, 0xfe, 0x5b, 0xac, 0x5c, 0x99, 0x5, 0x49, 0x6c, 0xaf, 0x6e, 0x9b, 0xc1, 0x6b, 0x40, 0x30, 0xd0, 0xa8, 0x68}}
	return a, nil
}

var _supportLicensedmgPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x6d\x73\xe2\x3a\xb2\xfe\xee\x5f\xd1\xc7\x7b\xb7\x0c\x55\x0e\x63\x8c\xb1\x93\x9d\x65\xab\x08\x98\x09\xf7\x26\x90\x02\xb2\x73\x66\x4f\xa6\x28\x63\x0b\xd0\x1d\x63\x79\x25\x39\x19\x32\x75\xfe\xfb\x56\xcb\x2f\xd8\x21\xd9\x73\x26\x1f\x88\x2d\xb5\x9e\xee\xa7\xbb\xdd\x2d\xe9\x2f\xbf\xc0\x87\x4c\xf0\x0f\x1b\x9a\x7c\x20\xc9\x13\xa4\x47\xb9\x67\x89\xa6\xeb\xba\xb6\xda\x53\x01\x22\xe4\x34\x95\x10\x44\x91\x80\x00\x62\x1a\x92\x44\x10\xd8\xd2\x98\x80\x64\x10\xc0\xf8\xee\x53\x07\x16\xe4\xdf\x19\xe5\x44\xc0\xaf\x21\x8b\x08\x04\x49\x04\x01\xa4\x71\x40\x13\x08\x44\x48\x29\x48\xf2\x5d\x6a\x8d\xc5\x8c\x43\x90\xc0\x62\x35\x69\x60\x76\xb4\xf9\xe6\x89\xb2\x4c\xc4\x47\x60\x49\x7c\x04\x9e\x25\x02\x58\x02\x01\xdc\x05\x61\x47\xd3\x46\x2c\x3d\x72\xba\xdb\x4b\x68\x8d\xda\x60\x5b\xdd\xee\x85\x6d\x75\xaf\xe0\x7f\x03\x4e\x22\xb8\x61\x9b\x8d\xd0\xb4\x7b\xc2\x0f\x54\x08\xca\x12\xa0\x02\xf6\x84\x93\xcd\x11\x76\x3c\x48\x24\x89\x4c\xd8\x72\x42\x80\x6d\x21\xdc\x07\x7c\x47\x4c\x45\x23\x39\x42\x4a\xb8\x60\x09\xb0\x8d\x0c\x68\x42\x93\x1d\x04\x10\xb2\xf4\xa8\xb1\x2d\x48\xe5\x08\xb6\x95\xcf\x01\x2f\xd8\x09\xc1\x42\x1a\x48\x12\x41\xc4\xc2\xec\x40\x12\x19\x48\xd4\x87\x24\x04\xb4\xe4\x9e\x80\xbe\x2c\x56\xe8\x6d\xa5\x24\x22\x41\xac\xd1\x04\x70\xae\x9c\x82\x67\x2a\xf7\x2c\x93\xc0\x89\x90\x9c\x86\x88\x61\x02\x4d\xc2\x38\x8b\xd0\x86\x72\x3a\xa6\x07\x5a\x68\xc0\xe5\xca\x03\x42\x93\x0c\x32\x41\x4c\x65\xa7\x09\x07\x16\xd1\x2d\xfe\x27\x8a\x56\x9a\x6d\x62\x2a\xf6\x26\x44\x14\xa1\x37\x99\x24\x26\x08\x1c\x54\xee\x36\x91\xc7\x07\xc6\x41\x90\x38\xd6\x42\x96\x52\x22\x40\x71\x3d\x59\xa7\x64\xd0\xf4\x14\x1d\x2a\x0b\x17\x09\x1c\x79\xde\xb3\x43\x93\x09\x15\xda\x36\xe3\x09\x15\x7b\xa2\xd6\x44\x0c\x04\x53\x1a\xff\x9f\x84\x12\x47\x50\x7c\xcb\xe2\x98\x3d\x23\xb5\x90\x25\x11\x45\x46\xe2\x6f\x9a\xb6\xda\x13\x08\x36\xec\x89\x28\x2e\x79\x80\x13\x26\x69\x98\xbb\x5b\x05\x20\x3d\x45\xb5\x98\x12\xfb\x20\x8e\x61\x43\x0a\x87\x91\x08\x68\xa2\xe1\x50\x49\x87\xa3\x7a\x21\x83\x44\xd2\x20\x86\x94\x71\xa5\xef\x35\xcd\x8e\xa6\xad\x6e\x7c\x58\xce\x27\xab\xcf\xc3\x85\x0f\xd3\x25\xdc\x2f\xe6\xff\x9c\x8e\xfd\x31\xe8\xc3\x25\x4c\x97\xba\x09\x9f\xa7\xab\x9b\xf9\xc3\x0a\x3e\x0f\x17\x8b\xe1\x6c\xf5\x05\xe6\x13\x18\xce\xbe\xc0\xff\x4d\x67\x63\x13\xfc\x5f\xef\x17\xfe\x72\x09\xf3\x85\x36\xbd\xbb\xbf\x9d\xfa\x63\x13\xa6\xb3\xd1\xed\xc3\x78\x3a\xfb\x04\xd7\x0f\x2b\x98\xcd\x57\x70\x3b\xbd\x9b\xae\xfc\x31\xac\xe6\x80\x0a\x0b\xa8\xa9\xbf\x44\xb0\x3b\x7f\x31\xba\x19\xce\x56\xc3\xeb\xe9\xed\x74\xf5\xc5\xd4\x26\xd3\xd5\x0c\x31\x27\xf3\x05\x0c\xe1\x7e\xb8\x58\x4d\x47\x0f\xb7\xc3\x05\xdc\x3f\x2c\xee\xe7\x4b\x1f\x86\xb3\x31\xcc\xe6\xb3\xe9\x6c\xb2\x98\xce\x3e\xf9\x77\xfe\x6c\xd5\x81\xe9\x0c\x66\x73\xf0\xff\xe9\xcf\x56\xb0\xbc\x19\xde\xde\xa2\x2a\x6d\xf8\xb0\xba\x99\x2f\xd0\x3e\x18\xcd\xef\xbf\x2c\xa6\x9f\x6e\x56\x70\x33\xbf\x1d\xfb\x8b\x25\x5c\xfb\x70\x3b\x1d\x5e\xdf\xfa\xb9\xaa\xd9\x17\x18\xdd\x0e\xa7\x77\x26\x8c\x87\x77\xc3\x4f\xbe\x5a\x35\x5f\xdd\xf8\x0b\x0d\xc5\x72\xeb\xe0\xf3\x8d\x8f\x43\xa8\x6f\x38\x83\xe1\x68\x35\x9d\xcf\x90\xc6\x68\x3e\x5b\x2d\x86\xa3\x95\x09\xab\xf9\x62\x55\x2d\xfd\x3c\x5d\xfa\x26\x0c\x17\xd3\x25\x3a\x64\xb2\x98\xdf\x99\x1a\xba\x73\x3e\x41\x91\xe9\x0c\xd7\xcd\xfc\x1c\x05\x5d\x0d\x8d\x88\xcc\x17\xea\xfd\x61\xe9\x57\x80\x30\xf6\x87\xb7\xd3\xd9\xa7\x25\x4c\x67\x8d\xf0\x75\x54\xed\xda\x72\x76\x80\xf5\x7a\x9b\xc9\x8c\x93\xf5\x1a\xe8\x01\xa3\x0f\x59\x42\xb1\x42\xad\x63\x2a\x09\x0f\x62\x91\xcb\x89\x6c\x93\x72\x16\x12\x21\x4a\xb9\x70\x4f\xc2\x6f\xeb\x30\x88\x63\xb3\x78\x66\x99\x4c\x33\x69\x42\x3e\x36\x0a\xe2\x98\x44\xf7\xf9\x22\x9f\x73\xc6\xb5\x62\x65\xc0\x77\x69\xc0\x05\x29\xdf\x63\xb6\xdb\xa9\x6a\x22\xd4\x23\xa9\x04\x99\x28\x9f\xc4\xb1\x7a\x94\xe4\x90\x62\x09\xd1\xb4\x5c\xb8\xb3\x09\x04\x0d\x47\x2c\xd9\xd2\x5d\x6b\xcb\xf8\x21\x90\x03\xe3\xaf\xad\x03\x11\x22\xd8\x91\xb6\x30\x4c\x88\xc9\x13\x89\x07\x85\xf8\xd8\xbf\x7e\xf8\xd4\xd6\x34\x2d\x8c\x03\x21\xe0\x3e\x90\xfb\x96\x90\xbc\xfd\x37\x0d\x00\x20\x22\x5b\x58\xaf\x49\x22\x09\x5f\xaf\x5b\x82\xc4\xdb\x62\x02\xff\x38\x91\x19\x4f\xb0\x1c\x6c\xb5\xba\xf4\x77\x2a\x0b\x61\x13\xe4\x31\x25\x26\x3c\x05\x71\x86\x75\x93\x07\x21\xd9\x04\xe1\xb7\x1a\x08\x13\x9d\x2c\x89\x69\xf2\x2d\x47\xd7\x34\x0d\x51\x0e\xdf\x90\x57\x2b\xa2\x7c\x30\x63\x89\x2a\x43\xdb\x2d\xfd\x3e\x30\x8c\x62\xe9\x16\xcb\x32\x8d\x49\x12\x1c\x08\x0c\x2a\x2f\x74\x0e\xdf\x44\xb5\x32\xa2\xbc\x5a\x98\xff\x6b\x6b\x85\xca\x30\x66\x82\xb4\xb6\x51\x3e\x50\x10\x51\xdc\x4b\xd0\xd2\x12\x22\xc2\x20\x25\x2d\x51\xe8\x2d\x39\x77\xb0\x42\xa6\xad\x76\x87\x93\x34\x0e\x42\xd2\x32\x1e\x1f\x0d\x13\x8c\xc7\xc7\xc7\x47\xa3\x36\xaa\xe7\x83\xba\x51\x31\x0b\x68\xd2\x62\xa9\x2a\x2b\xa5\x93\x0f\xbb\xb5\xea\x70\x03\x28\x26\x3a\xe5\x50\x6e\xaf\x4a\xa4\xda\x6c\x31\xc0\x38\x34\xe4\xca\xb6\x78\x12\x2c\x46\x4e\x22\x74\x7b\xd2\xf6\xcb\xa0\x40\x3e\x05\xe3\x94\xc4\xad\xdf\x8c\x30\x35\xcc\x4a\xda\x2c\x64\xbf\xb6\x2b\xe1\xba\xd9\x6a\x4e\xcd\x60\xff\x29\xc3\x67\x74\x8c\x36\xa6\xb1\x3c\xa4\x4a\xf2\xa4\x48\x49\xb1\x94\x24\xad\x72\xce\x04\xe3\x39\x97\xde\x9e\xc4\x54\xa4\x3b\xcf\x9c\x4a\xd2\xd2\x75\xfd\x51\x8b\x02\x19\x80\xb1\xba\xbb\xbf\x35\xa0\xd5\xb5\x2f\x4d\xd0\x6f\xef\x69\xa8\xb7\xe1\x87\x5a\xf4\x3f\x7a\xb7\xe7\x38\xe0\xf6\x5d\x17\xdc\xae\xd7\x07\x77\xe4\x39\x60\x5b\xce\x08\xdc\xae\xeb\x83\xeb\xe1\x58\xd7\xf5\xf4\x42\xdc\xed\xdb\x16\x38\x57\x8e\x03\x8e\xd3\xf7\xa0\x6f\x3b\x0e\x58\x7d\xa7\x07\xee\x04\x25\x7d\xcf\x01\x67\xe2\xf4\x4a\x71\xc7\xef\x3b\x60\x39\xf6\x10\xec\xa1\xfa\x71\x46\xd0\xef\xf5\x1d\x70\x7a\xd6\x35\x78\x3d\xef\x0a\xbc\x9e\x6d\x55\xe8\x23\xb7\x0b\xae\xef\x7a\x68\xc2\x15\x38\x8e\xe3\x40\xdf\xeb\xdb\xe0\x38\x5d\x1f\xdc\x91\x3b\x01\xb7\xe7\x76\x4f\xe2\xb6\x05\x9e\xed\xf6\x15\x48\x6e\x96\x6d\xd9\x97\xe0\x4e\x90\x8f\xeb\xf5\xc0\xed\x7b\x4e\x29\x6e\x5b\xae\x8b\xe2\x13\x70\xc7\xb6\x05\xbd\x7e\xcf\x82\x9e\xd5\xb3\x6a\x54\xba\x56\xcf\xae\xc4\xc7\xae\x0d\xde\x95\x87\xee\xb1\x2d\x38\xd9\xe6\xf5\xf1\xc9\x73\xfb\xd0\x9b\x38\x15\x7a\x61\xa7\xe5\x94\x54\xed\x21\x38\xa3\x7e\x0f\xfa\x8e\xd3\xd7\xb5\xdf\x3f\x6a\x45\x34\x30\x00\x06\xb4\xfa\x96\x65\x9d\xc2\x60\x59\x96\x05\x96\x65\xd9\x50\x3e\xbd\xfa\x71\xd4\x53\x1d\x67\xb9\x5a\xfc\xa5\xc0\x31\x41\xf7\x93\x1d\x6e\x46\x60\x93\x49\xc9\x12\xa1\x37\xa0\x5d\xb0\xc6\x4e\x3f\xb7\xde\x1d\xb9\xe8\x74\xf7\x12\x6c\x4b\x71\xf3\x7a\xe0\x39\xbd\xca\xa9\x56\xdf\x41\x76\x9e\x8d\x59\xd1\x07\xeb\x12\xf3\xe3\x0a\x5d\xd9\x45\xee\xe8\x6d\xb7\x6f\xf5\x2b\xda\x16\x4a\x5e\xb9\x3e\x78\x8e\xe5\x41\xbf\xe7\x76\xc1\x73\xdd\x3e\xd8\xbe\xed\x83\xed\x7b\x43\x70\xae\x5c\xf7\x14\x03\xef\x2a\xcf\x15\xdb\x72\xeb\x7a\x6c\xcb\xf3\x50\x8f\x03\xee\xe5\x29\x21\x3c\xc7\xbd\xcc\xdd\xef\x39\x18\x66\xdb\x1d\xe7\xb1\x56\x11\xce\x09\x5c\xba\x57\x95\x78\x2f\x0f\xd4\x15\xa6\x89\x4a\x47\xcc\x00\x7b\x84\xca\x7a\xd5\xc4\xf5\xc9\x18\xdb\x06\xa7\x46\xcb\xb6\x0b\xcc\x09\xe2\x74\x71\x4d\xcf\xed\x9f\xd0\xbd\x5e\xa5\x53\x59\xdc\xcb\xed\xf0\x1c\xb4\xbd\xab\xa8\xd8\x7e\x0d\xdd\x52\xdc\xa1\x41\xba\x44\xf7\xdd\x09\x78\x4e\x2d\xf7\xeb\x76\xa0\xc5\x5e\x95\xdb\x4a\x2d\x9a\xea\xd4\xa9\x36\xdd\xe7\xdb\xf6\xdb\xc9\x61\x9f\x92\xe3\x2c\x29\xbc\xf3\xa4\x68\x86\xbf\x4a\x8a\x77\xb2\x00\x9a\xe1\xaf\x92\xe2\x2c\x0b\xae\xdf\xf0\xc4\xe9\x3b\x7e\x27\x0b\xa0\x19\xfe\x8a\xfa\x3b\x59\x00\xcd\xf0\x57\xe8\xb5\x2c\x78\xc3\xa7\x25\x9f\x5a\x85\x6b\x64\x81\xe2\xd6\xc3\xd7\xae\x3b\x82\xbc\xe4\x38\xee\x65\xa3\x20\x7a\x3d\x2c\x2a\xae\xe7\x80\xe7\x21\x73\x3b\x67\x6e\xe5\x65\xcc\x75\x6b\x09\x7d\x85\x61\x57\xf5\xc4\x71\x27\xe8\x05\x1f\xfd\xe1\xbc\xfa\x1c\xaa\x1c\x52\xea\x94\x8f\xd5\x77\x8a\x04\x6d\xfb\x2c\x16\x4d\xdb\x7d\x4c\x84\xc7\xe4\x31\xd1\x75\xbd\xdd\xe8\x0d\xa7\x36\x52\x9d\x51\x0c\x9e\x77\x91\xf8\x55\xc7\x29\xff\xbe\xd1\x24\x82\x01\x18\x78\x8e\x34\xb0\x1f\x16\x2b\x3b\x31\x7b\x26\xbc\xd5\xee\x90\x24\x12\x88\xdb\x32\x3a\x5c\x6e\x8d\x36\x90\x58\x10\x30\x56\xfe\xaf\x2b\xe3\x0c\xad\x6c\x4e\x86\xca\xd2\x47\xe3\xc7\xef\x8f\x67\x25\x0c\xb3\xf4\xc7\x63\x62\x74\xf2\xdd\x58\x0b\x2d\x68\xb7\xb5\x73\x2c\xc6\x21\xa6\x09\x9e\x4d\xde\xb5\xbe\xe8\xe1\xb1\x62\x9c\x90\x36\xfc\x1d\xba\x96\x65\xbd\x2d\xd8\x30\x10\x5f\xf4\x1f\xbf\x3f\x3e\x26\x7a\xcd\x96\x62\x77\xa3\xb0\xda\xed\x37\x51\x90\xfe\x7f\xc1\x2f\x8c\xe6\xca\x6a\x9a\x90\x8e\x48\x63\x2a\x55\xeb\x7f\x7f\xd5\x5b\x96\x75\xe0\x7d\xdb\xf8\x5b\xc6\x55\x00\x79\x72\x18\xed\x3f\xda\x36\x08\x79\x8c\xdf\x8c\xce\xa9\x86\xf4\x9a\x4d\x6a\x84\x3f\x57\x60\x59\x5d\xe7\x34\xa1\xbf\x6a\x71\xcd\x1f\xdb\x7b\xb5\xb0\x12\xef\xbe\xd9\x07\x4f\x0b\x87\x6a\x61\x0d\xfd\xb5\xe2\x57\x3f\xf9\x57\xd1\xf8\x26\x8a\x9d\xdb\x3e\xa2\x99\xa4\x31\x6e\x3d\xb3\x64\x1b\x07\x52\x92\x04\x5f\x2e\xfe\x9d\x51\x22\x6b\xbb\xba\xda\x6e\x8e\x13\xdc\x61\xd6\x37\x80\xe5\x26\x92\x93\x17\x5c\x1b\x18\x26\xd4\x36\x6b\x17\xec\x6d\x9c\x73\x13\xfe\xa4\x01\x74\x5b\x6d\x5b\x43\x76\x48\x39\xa9\xae\x63\x12\x26\x01\x4f\x01\xcd\x7c\x42\x5b\xa2\xc3\x0e\xbf\xe5\x1f\xbf\x77\x70\xbf\x89\xbb\xe6\x2a\x7b\x4a\x0d\xcd\xac\xf8\x6f\x1b\xdc\x02\xf0\x6b\x73\x05\x43\x07\x1c\xd8\x13\x79\x07\x31\xe0\x3b\x01\x03\x68\x30\x0e\x59\xf2\x44\xb8\x34\x2a\xcc\x3a\x75\xe3\x22\xb7\xd0\xf8\xda\xc0\x79\x87\xfe\x60\x00\xc6\xe6\xc5\x36\xce\xbf\x25\x54\xdc\x09\xd2\x94\x24\x51\xcb\x78\x18\x5f\xff\xeb\xd5\x07\x40\xe2\xf7\x21\xf5\xdd\x8b\xfe\x0e\x22\xf9\x2e\x11\xf1\x37\xe3\x61\xfc\xaf\xb9\x32\x97\x1e\x82\x1d\xf9\x46\x8e\xf8\xf2\x12\xd3\xcd\x45\xa4\xce\x8f\x57\xc6\xd7\x73\x4f\x9c\x96\xbf\x97\x1f\xaf\xa2\x80\x8b\xde\x73\x78\xe1\xbc\x76\x79\x72\x51\x29\x3a\x80\x5a\xb5\x2b\xce\xb0\x34\xd9\xb2\x96\xbe\xcc\x42\x3c\x5b\x6f\xb3\x38\x3e\x42\x10\x45\x24\xaa\x4e\x44\x92\x61\x92\x18\xfa\x59\x72\xe4\xd8\xcd\x12\x57\x80\x12\x3c\xa3\xb7\xf4\x49\x40\xe3\xfc\x7a\x2a\x88\xfe\x14\xa0\xa6\x51\x3c\x05\xe3\x19\x72\xbd\x56\xf1\x5b\xaf\xf1\xd0\xb7\x5e\x17\x41\x94\xfc\x58\x3f\x43\xbf\xac\xd3\x40\xee\xab\x6f\x2f\x3f\x4a\xb5\x1a\x2e\xf9\xcd\xf8\x1e\xf2\x2c\xff\x82\x2e\xb6\x34\x89\xf0\x69\x41\x5e\x8c\xaf\x66\x25\xd7\xae\x4e\xa4\x11\x09\x59\x44\x5a\x46\x26\xb7\x17\x97\x45\x52\x90\xef\x21\x49\xe5\x1b\x97\x10\x6f\x5a\x62\x7c\xb8\xa5\x1b\x1e\xf0\xe3\x87\x31\x86\x9a\xa5\x84\x7f\x18\xb1\xc3\x21\x48\xa2\x5b\x9a\x90\x15\x63\xb1\xa8\xae\x80\xd1\x0e\x05\xa2\x2e\x31\x38\x0c\xaa\x0b\x8d\xce\x90\xef\xd4\x45\xe7\xbd\x9a\x39\x71\x8a\x48\x7e\x47\x4c\x59\x32\x50\xf5\x59\xdd\x1b\xa7\x9c\xed\x78\x70\x28\x2f\x8e\xab\xdb\xd3\xd2\xe7\xc1\x8e\x13\x82\x70\xd5\x35\x72\x71\x01\x3c\x95\xc0\xcf\xaf\x93\x09\x95\x7b\xc2\xdf\xb8\x55\x86\xbf\xd7\x8f\xc5\xff\xd0\x18\x0a\x35\xc6\xb0\xf1\xff\x23\xdf\x5c\xc8\x3d\x51\x57\xce\x21\x4b\x24\x49\xa4\xe8\x68\xda\x92\x10\xb8\xb8\xd8\x93\x38\x55\xdd\xef\xc0\x38\x81\x88\xc8\x80\xc6\xa2\xa3\xeb\x7a\x1e\x92\x76\xcd\x25\x9d\x20\x8a\xd6\x41\xe1\x8b\x93\x17\x8c\x32\x69\x8c\x53\x14\x11\x75\x60\xa0\x52\x15\x8a\xe2\x0a\x14\xcb\x9c\x3a\x69\x3f\xef\x69\xb8\x87\x67\x1a\xc7\xc0\x49\x48\xe8\x13\x51\xf3\x85\xed\xc6\x9f\x57\x5d\x67\xfb\x87\xea\xeb\x0e\x64\xfc\xec\x06\xfe\xa3\x72\x03\x8e\xaa\xab\x6c\x13\x5e\x6d\x93\x14\x9e\x32\xff\x90\x09\x09\x19\x86\x12\xd0\xc5\xa0\x8a\x05\xd6\xa4\x9f\xb0\xfc\xe2\x82\x93\x97\x9a\xc9\xc6\x05\xaf\xbd\x05\xea\x3e\x7c\x60\x08\xc9\x78\x9d\x58\x44\xb6\x41\x16\xcb\x41\x99\xe4\x7f\x44\x79\x41\x5e\x40\x32\x16\x7f\x2c\x57\xaa\x2b\xec\xbf\xb6\x8a\xb7\xb6\xf8\x29\x8b\x6b\xd5\xb7\x61\x79\xf8\x27\x2c\x0f\xf7\x8c\x86\x44\x0c\x5a\xaa\x0d\x98\x60\xec\x5e\x8c\xf6\x39\x31\x75\x4b\xf6\x8a\x54\x5e\xfc\x03\x2c\x87\xa5\x05\x2a\x95\x32\x41\x93\x1d\x88\x94\x84\x74\x4b\x49\x04\xf5\xe6\x20\x8f\x29\xf9\x78\x16\xc1\xc2\x08\xc0\xcf\x71\xf3\x62\xab\xef\x6b\xf7\xf2\x53\x3e\xc8\xeb\x5a\x83\x3e\xfb\x89\xc0\xbd\xc5\x2f\x67\x70\x84\x20\x29\xaf\xc8\xca\x9a\xf0\x11\xdb\x05\x6e\x1b\x76\xf4\x89\x24\x66\xfd\x23\xc9\xbf\x9e\x0d\x39\xe3\x18\x51\x4e\x42\x89\xad\x23\x4d\x63\x9a\x97\x7c\x5c\x47\x93\x3a\x72\x83\x73\xd1\x5d\x61\x50\xb2\x57\xff\x90\xbf\x68\x55\x5d\x0b\xcd\x60\xa2\x83\xd9\xd5\x21\xdf\xa9\x90\xa2\x55\xdb\x59\xb5\xdf\xe9\x3b\xc6\xa9\xef\x60\xc1\x57\x09\x19\x48\xdc\x27\xeb\xbf\xd4\xf6\xc8\x75\xa4\x53\x1b\x2d\xad\xe1\x34\x91\xeb\x4c\x04\x3b\xd2\x3a\x4d\x8a\x23\x76\x69\x2a\x5b\xdd\x7c\xac\x71\x21\xa9\xfd\x27\x00\x00\xff\xff\x28\xf6\xd7\x20\xdd\x1b\x00\x00")

func supportLicensedmgPyBytes() ([]byte, error) {
	return bindataRead(
		_supportLicensedmgPy,
		"support/licenseDMG.py",
	)
}

func supportLicensedmgPy() (*asset, error) {
	bytes, err := supportLicensedmgPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "support/licenseDMG.py", size: 7133, mode: os.FileMode(0755), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x56, 0x96, 0x7e, 0xbd, 0x1b, 0xc6, 0x7e, 0x5b, 0x3b, 0x94, 0x17, 0x9e, 0xaa, 0x12, 0xa, 0xaf, 0xe2, 0x63, 0x53, 0xaf, 0xf4, 0x7e, 0x8, 0xef, 0x1f, 0x6f, 0xa3, 0xb5, 0x97, 0xff, 0xc3, 0x85}}
	return a, nil
}

var _supportTemplateApplescript = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x5b\x6f\xda\x4c\x10\x7d\x36\xbf\x62\x64\x7d\x8a\x82\x12\x72\xd1\xf7\x58\x55\x15\x01\x12\xac\x52\x20\x40\x1a\x68\x53\xa1\xc5\x1e\xcc\x34\x66\x17\xed\xae\xa1\x17\xe5\xbf\x57\xb3\xc0\x62\x48\x5a\xe5\xa5\xea\x83\x25\xef\x9c\xb9\x9c\x39\xb3\x3b\x4a\x82\xce\x25\x1c\x2f\x55\x96\xcf\xb1\x2d\xe6\x58\x2e\x05\x16\xb3\x0c\xc4\x62\x91\x51\x2c\x2c\x29\x09\xe1\x35\xc9\x04\x75\x58\x0a\xd6\x58\x42\xe6\xb1\x18\x03\xc2\x80\xb1\x9a\x64\x5a\x2e\x05\x41\xa0\x16\x28\x4b\xfc\x63\xd0\x82\x9d\xe1\xb0\xa3\x29\x25\x09\x56\xc1\x7d\xd4\x1e\x16\x90\xd1\x1e\x32\x2a\x20\xf7\x94\xd8\xd9\xc6\x7e\x5f\xb0\x37\x91\xd2\x99\xdd\x00\xcd\x62\x95\x2b\x65\xad\x9a\xf7\x18\x1e\x32\x7e\x5c\xa8\x7c\xe2\x53\x96\x5f\x8e\x18\x6d\x23\x46\xc5\x88\x75\x31\x1f\x92\x98\xbe\x55\x1a\xd9\x35\x7c\x08\x43\x38\x82\xf0\xfc\xa3\x13\xc1\x9c\xf3\xa9\x20\x08\x43\xce\xe1\xac\xde\x1f\xf7\x07\x9d\x5e\xe3\x21\x0c\x1d\x5b\x27\x60\xac\xa4\x15\x24\x51\xc3\x8a\x64\xa2\x56\x0c\xb8\x12\x71\xae\x35\x4a\x0b\x4b\xc2\x15\xd7\xa1\x58\x49\x77\xf0\x1e\x56\xa9\x6c\x22\x34\x2c\xc9\xd0\x24\x73\x64\xa6\x22\x33\xe8\x1d\x8c\x15\x36\x37\x7f\x74\xb1\x33\x84\x89\xca\x65\x62\x18\xfb\xb9\x13\xea\xb4\x30\x94\xd3\x43\x51\x0f\x0d\xa3\xa7\xd7\xd6\xec\x35\xba\x9d\x7e\x34\x88\x3a\xed\x71\x33\xaa\xd7\x1b\xed\xf1\x75\xd4\x6a\xf4\xc7\xb5\x56\xf5\xae\xdf\x60\x17\x94\x09\xb0\x32\x7e\xa0\x6a\x61\x1d\x39\xa6\xea\x45\x60\x2b\x29\x69\x40\x4d\x5f\x94\xd0\x69\xcb\x91\x9e\x98\x0b\x35\xf4\xc3\x11\x8a\x6a\x9d\xf6\xb8\x1f\x7d\x6a\xec\x84\xc0\x6f\xd6\xc3\x83\xc6\x70\xb0\x0f\x0b\xad\x85\x4c\x71\xce\x13\xb1\x0a\xa4\xf2\xa6\x64\x8f\x74\x10\x04\x57\xd5\xda\xfb\x9b\x5e\xe7\xae\x5d\xdf\x76\xc5\xd6\x4a\x05\xba\xca\x10\x93\x26\x99\xb2\xc5\x0b\xb1\xef\xd5\xa4\x64\xe3\xd0\x8c\xea\x51\xfb\xe6\x00\xae\x16\x1e\xa3\x90\x09\xdc\xb6\xa0\x45\xf2\x11\x6a\x99\xc8\x0d\xba\x76\xab\xdd\x6e\x2b\xaa\x55\x8b\xb9\x83\x20\xb8\x6d\x15\x0e\x71\xa6\xd6\x03\x71\x0f\x74\x9d\xf9\x5a\xe9\x18\xc1\x88\x25\xc9\x94\x65\x65\xbd\x59\x10\x86\x13\xcc\xc4\x77\xb8\x7c\xc5\xb5\xfd\x6b\x77\x0e\x2a\x70\x79\xf1\xec\xe2\x39\xeb\xd3\xc1\x08\x8a\x57\xa8\xc0\xfc\x35\x0b\xeb\x1f\x35\xf7\xf2\x83\xfa\x4d\x4b\x95\x4a\x4a\x4b\x74\x95\xa6\x6e\x1b\x83\x51\x73\x04\x4b\x73\xc7\x67\xa5\xc9\xae\x51\xb7\x71\xdc\x9e\x9a\x52\x86\x5e\x8c\xff\x39\x09\x73\x5d\x09\xb2\x83\x4d\xd4\xc5\xc6\x86\x5f\x31\xb6\x1f\xf6\x1a\xd3\xb8\x40\x61\x61\x35\xa3\x0c\x3d\x4e\x66\xd7\xf8\x56\xe3\xe0\x79\x5a\xff\x7f\xb2\xc6\xf9\xa3\x29\x1c\x27\x0a\xcc\x8c\xb5\x36\xb1\xa6\x85\x85\xf0\x33\x54\xa6\xc0\x7b\x72\xbb\x5a\x8f\x20\x84\x2f\x6f\x00\xe3\x99\x82\xff\xde\x85\x65\x78\x0b\xe1\x45\xc8\x7d\x49\x38\x20\x6a\x75\x8e\x1b\x8d\xd6\x5c\x4b\x41\x90\xa9\x14\x42\xae\x8e\x89\x4b\xeb\x89\x70\x5e\x83\xb1\xe2\x09\x4d\x95\x06\xbf\x96\x39\xd3\x04\x21\xd6\x28\x2c\x26\x67\x61\x69\x27\xba\xcb\x9c\xcb\xd2\xaf\x00\x00\x00\xff\xff\x0f\x5d\x68\x15\x24\x07\x00\x00")

func supportTemplateApplescriptBytes() ([]byte, error) {
	return bindataRead(
		_supportTemplateApplescript,
		"support/template.applescript",
	)
}

func supportTemplateApplescript() (*asset, error) {
	bytes, err := supportTemplateApplescriptBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "support/template.applescript", size: 1828, mode: os.FileMode(0644), modTime: time.Unix(1592308293, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x13, 0x72, 0x7c, 0x79, 0x30, 0xc5, 0xb, 0xe6, 0x39, 0xa1, 0xeb, 0x19, 0x1e, 0x89, 0x3f, 0x1e, 0xbc, 0x72, 0xc2, 0x70, 0x26, 0x8d, 0x46, 0x11, 0x39, 0x1b, 0x41, 0x41, 0xa, 0x3e, 0x86, 0x2a}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"LICENSE":                             license,
	"Makefile":                            makefile,
	"README.md":                           readmeMd,
	"builder/create-dmg.builder":          builderCreateDmgBuilder,
	"create-dmg":                          createDmg,
	"doc-project/Developer Notes.md":      docProjectDeveloperNotesMd,
	"doc-project/Release Checklist.md":    docProjectReleaseChecklistMd,
	"support/LICENSE-licenseDMG-pyhacker": supportLicenseLicensedmgPyhacker,
	"support/README":                      supportReadme,
	"support/licenseDMG.py":               supportLicensedmgPy,
	"support/template.applescript":        supportTemplateApplescript,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"LICENSE":   &bintree{license, map[string]*bintree{}},
	"Makefile":  &bintree{makefile, map[string]*bintree{}},
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"builder": &bintree{nil, map[string]*bintree{
		"create-dmg.builder": &bintree{builderCreateDmgBuilder, map[string]*bintree{}},
	}},
	"create-dmg": &bintree{createDmg, map[string]*bintree{}},
	"doc-project": &bintree{nil, map[string]*bintree{
		"Developer Notes.md":   &bintree{docProjectDeveloperNotesMd, map[string]*bintree{}},
		"Release Checklist.md": &bintree{docProjectReleaseChecklistMd, map[string]*bintree{}},
	}},
	"support": &bintree{nil, map[string]*bintree{
		"LICENSE-licenseDMG-pyhacker": &bintree{supportLicenseLicensedmgPyhacker, map[string]*bintree{}},
		"README":                      &bintree{supportReadme, map[string]*bintree{}},
		"licenseDMG.py":               &bintree{supportLicensedmgPy, map[string]*bintree{}},
		"template.applescript":        &bintree{supportTemplateApplescript, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
